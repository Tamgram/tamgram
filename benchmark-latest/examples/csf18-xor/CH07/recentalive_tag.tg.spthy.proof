theory CH07 begin

// Function signature and definition of the equational theory E

builtins: xor
functions: fst/1, h/1, lh_27/1, pair/2, rh_28/1, rot_26/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



/* looping facts with injective instances: StF/3 */

rule (modulo E) Setup_31:
   [ Fr( ~k_29 ), Fr( ~id_30 ) ]
  -->
   [ !Reader_18( ~k_29, ~id_30 ), !Tag_19( ~k_29, ~id_30 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) reader_38_1to2:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk2', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) reader_38_manyto2to3_reader1:
   [ StF( ~pid, 'tgk2', 'empty_tuple' ), Fr( ~r1_32 ) ]
  --[ Challenge_20( ~r1_32, 'Reader' ) ]->
   [ StF( ~pid, 'tgk3', ~r1_32 ), Out( ~r1_32 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) reader_38_manyto3_reader2:
   [
   StF( ~pid, 'tgk3', ~u_tgany0_37 ), !Reader_18( ~k_34, ~id_35 ),
   In( <r2_33, lh_27((hash_36⊕rot_26(~id_35, hash_36)))> )
   ]
  --[
  Alive_21( ~k_34, 'Tag' ), Response_22( ~k_34, 'Reader' ),
  Eq_23( h((~k_34⊕~u_tgany0_37⊕r2_33)), hash_36 ),
  Running_24( <'T', 'R', (~k_34⊕~u_tgany0_37⊕r2_33)> ),
  Commit_25( <'R', 'T', (~k_34⊕~u_tgany0_37⊕r2_33)> )
  ]->
   [ Out( rh_28((hash_36⊕rot_26(~id_35, hash_36))) ) ]

  /*
  rule (modulo AC) reader_38_manyto3_reader2:
     [
     StF( ~pid, 'tgk3', ~u_tgany0_37 ), !Reader_18( ~k_34, ~id_35 ),
     In( <r2_33, lh_27(z)> )
     ]
    --[
    Alive_21( ~k_34, 'Tag' ), Response_22( ~k_34, 'Reader' ),
    Eq_23( h(z.1), hash_36 ), Running_24( <'T', 'R', z.1> ),
    Commit_25( <'R', 'T', z.1> )
    ]->
     [ Out( rh_28(z) ) ]
    variants (modulo AC)
     1. ~id_35
              = ~id_35.16
        ~k_34 = ~k_34.17
        ~u_tgany0_37
              = ~u_tgany0_37.19
        hash_36
              = zero
        r2_33 = ~k_34.17
        z     = rot_26(~id_35.16, zero)
        z.1   = ~u_tgany0_37.19
    
     2. ~id_35
              = ~id_35.16
        ~k_34 = ~k_34.17
        ~u_tgany0_37
              = ~u_tgany0_37.19
        hash_36
              = zero
        r2_33 = ~u_tgany0_37.19
        z     = rot_26(~id_35.16, zero)
        z.1   = ~k_34.17
    
     3. ~id_35
              = ~id_35.16
        ~k_34 = ~k_34.17
        ~u_tgany0_37
              = ~u_tgany0_37.19
        hash_36
              = zero
        r2_33 = zero
        z     = rot_26(~id_35.16, zero)
        z.1   = (~k_34.17⊕~u_tgany0_37.19)
    
     4. ~id_35
              = ~id_35.16
        ~k_34 = ~k_34.17
        ~u_tgany0_37
              = ~u_tgany0_37.19
        hash_36
              = zero
        r2_33 = (~k_34.17⊕~u_tgany0_37.19)
        z     = rot_26(~id_35.16, zero)
        z.1   = zero
    
     5. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = hash_36.21
        r2_33 = ~k_34.18
        z     = (hash_36.21⊕rot_26(~id_35.17, hash_36.21))
        z.1   = ~u_tgany0_37.20
    
     6. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = hash_36.21
        r2_33 = ~u_tgany0_37.20
        z     = (hash_36.21⊕rot_26(~id_35.17, hash_36.21))
        z.1   = ~k_34.18
    
     7. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = hash_36.21
        r2_33 = zero
        z     = (hash_36.21⊕rot_26(~id_35.17, hash_36.21))
        z.1   = (~k_34.18⊕~u_tgany0_37.20)
    
     8. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = hash_36.21
        r2_33 = (~k_34.18⊕~u_tgany0_37.20)
        z     = (hash_36.21⊕rot_26(~id_35.17, hash_36.21))
        z.1   = zero
    
     9. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~k_34.19
        hash_36
              = hash_36.22
        r2_33 = r2_33.23
        z     = (hash_36.22⊕rot_26(~id_35.18, hash_36.22))
        z.1   = r2_33.23
    
    10. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~k_34.19
        hash_36
              = zero
        r2_33 = r2_33.23
        z     = rot_26(~id_35.18, zero)
        z.1   = r2_33.23
    
    11. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~u_tgany0_37.21
        hash_36
              = hash_36.22
        r2_33 = r2_33.23
        z     = (hash_36.22⊕rot_26(~id_35.18, hash_36.22))
        z.1   = (~k_34.19⊕~u_tgany0_37.21⊕r2_33.23)
    
    12. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~u_tgany0_37.21
        hash_36
              = zero
        r2_33 = r2_33.23
        z     = rot_26(~id_35.18, zero)
        z.1   = (~k_34.19⊕~u_tgany0_37.21⊕r2_33.23)
    
    13. ~id_35
              = ~id_35.23
        ~k_34 = ~k_34.24
        ~u_tgany0_37
              = ~u_tgany0_37.26
        hash_36
              = hash_36.27
        r2_33 = (~k_34.24⊕~u_tgany0_37.26⊕z.33)
        z     = (hash_36.27⊕rot_26(~id_35.23, hash_36.27))
        z.1   = z.33
    
    14. ~id_35
              = ~id_35.23
        ~k_34 = ~k_34.24
        ~u_tgany0_37
              = ~u_tgany0_37.26
        hash_36
              = zero
        r2_33 = (~k_34.24⊕~u_tgany0_37.26⊕z.33)
        z     = rot_26(~id_35.23, zero)
        z.1   = z.33
    
    15. ~id_35
              = ~id_35.66
        ~k_34 = ~k_34.67
        ~u_tgany0_37
              = ~u_tgany0_37.69
        hash_36
              = zero
        r2_33 = (~u_tgany0_37.69⊕x.130)
        z     = rot_26(~id_35.66, zero)
        z.1   = (~k_34.67⊕x.130)
    
    16. ~id_35
              = ~id_35.67
        ~k_34 = ~k_34.68
        ~u_tgany0_37
              = ~u_tgany0_37.70
        hash_36
              = hash_36.71
        r2_33 = (~u_tgany0_37.70⊕x.132)
        z     = (hash_36.71⊕rot_26(~id_35.67, hash_36.71))
        z.1   = (~k_34.68⊕x.132)
    
    17. ~id_35
              = ~id_35.68
        ~k_34 = ~k_34.69
        ~u_tgany0_37
              = ~u_tgany0_37.71
        hash_36
              = zero
        r2_33 = (~k_34.69⊕x.134)
        z     = rot_26(~id_35.68, zero)
        z.1   = (~u_tgany0_37.71⊕x.134)
    
    18. ~id_35
              = ~id_35.69
        ~k_34 = ~k_34.70
        ~u_tgany0_37
              = ~u_tgany0_37.72
        hash_36
              = hash_36.73
        r2_33 = (~k_34.70⊕x.136)
        z     = (hash_36.73⊕rot_26(~id_35.69, hash_36.73))
        z.1   = (~u_tgany0_37.72⊕x.136)
  */

rule (modulo E) tag_47_4to5:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk5', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) tag_47_manyto5to6_tag1:
   [
   StF( ~pid, 'tgk5', 'empty_tuple' ), In( r1_40 ), Fr( ~r2_39 ),
   !Tag_19( ~k_41, ~id_42 )
   ]
  --[
  Response_22( ~k_41, 'Tag' ), Challenge_20( ~r2_39, 'Tag' ),
  Running_24( <'R', 'T', (~k_41⊕~r2_39⊕r1_40)> )
  ]->
   [
   StF( ~pid, 'tgk6', <h((~k_41⊕~r2_39⊕r1_40)), ~k_41, r1_40, ~r2_39> ),
   Out( <~r2_39, 
         lh_27((h((~k_41⊕~r2_39⊕r1_40))⊕rot_26(~id_42, h((~k_41⊕~r2_39⊕r1_40)))))>
   )
   ]

  /*
  rule (modulo AC) tag_47_manyto5to6_tag1:
     [
     StF( ~pid, 'tgk5', 'empty_tuple' ), In( r1_40 ), Fr( ~r2_39 ),
     !Tag_19( ~k_41, ~id_42 )
     ]
    --[
    Response_22( ~k_41, 'Tag' ), Challenge_20( ~r2_39, 'Tag' ),
    Running_24( <'R', 'T', z> )
    ]->
     [
     StF( ~pid, 'tgk6', <h(z), ~k_41, r1_40, ~r2_39> ),
     Out( <~r2_39, lh_27((h(z)⊕rot_26(~id_42, h(z))))> )
     ]
    variants (modulo AC)
    1. ~k_41 = ~k_41.13
       ~r2_39
             = ~r2_39.15
       r1_40 = ~k_41.13
       z     = ~r2_39.15
    
    2. ~k_41 = ~k_41.13
       ~r2_39
             = ~r2_39.15
       r1_40 = ~r2_39.15
       z     = ~k_41.13
    
    3. ~k_41 = ~k_41.13
       ~r2_39
             = ~r2_39.15
       r1_40 = zero
       z     = (~k_41.13⊕~r2_39.15)
    
    4. ~k_41 = ~k_41.13
       ~r2_39
             = ~r2_39.15
       r1_40 = (~k_41.13⊕~r2_39.15)
       z     = zero
    
    5. ~k_41 = ~k_41.14
       ~r2_39
             = ~k_41.14
       r1_40 = r1_40.17
       z     = r1_40.17
    
    6. ~k_41 = ~k_41.14
       ~r2_39
             = ~r2_39.16
       r1_40 = r1_40.17
       z     = (~k_41.14⊕~r2_39.16⊕r1_40.17)
    
    7. ~k_41 = ~k_41.18
       ~r2_39
             = ~r2_39.20
       r1_40 = (~k_41.18⊕~r2_39.20⊕z.25)
       z     = z.25
    
    8. ~k_41 = ~k_41.234
       ~r2_39
             = ~r2_39.236
       r1_40 = (~r2_39.236⊕x.465)
       z     = (~k_41.234⊕x.465)
    
    9. ~k_41 = ~k_41.236
       ~r2_39
             = ~r2_39.238
       r1_40 = (~k_41.236⊕x.469)
       z     = (~r2_39.238⊕x.469)
  */

rule (modulo E) tag_47_manyto6_tag2:
   [
   StF( ~pid, 'tgk6', <tgc_hash_0, ~u_tgany1_45, tgc_r1_0, ~u_tgany2_44> ),
   In( rh_28((tgc_hash_0⊕rot_26(~u_id_46, tgc_hash_0))) ),
   !Tag_19( ~u_tgany1_45, ~u_id_46 )
   ]
  --[
  Alive_21( ~u_tgany1_45, 'Reader' ),
  Commit_25( <'T', 'R', (~u_tgany1_45⊕~u_tgany2_44⊕tgc_r1_0)> )
  ]->
   [ ]

  /*
  rule (modulo AC) tag_47_manyto6_tag2:
     [
     StF( ~pid, 'tgk6', <tgc_hash_0, ~u_tgany1_45, tgc_r1_0, ~u_tgany2_44> ),
     In( rh_28(z) ), !Tag_19( ~u_tgany1_45, ~u_id_46 )
     ]
    --[ Alive_21( ~u_tgany1_45, 'Reader' ), Commit_25( <'T', 'R', z.1> ) ]->
     [ ]
    variants (modulo AC)
     1. ~u_id_46
              = ~u_id_46.16
        ~u_tgany1_45
              = ~u_tgany1_45.17
        ~u_tgany2_44
              = ~u_tgany2_44.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = ~u_tgany1_45.17
        z     = rot_26(~u_id_46.16, zero)
        z.1   = ~u_tgany2_44.18
    
     2. ~u_id_46
              = ~u_id_46.16
        ~u_tgany1_45
              = ~u_tgany1_45.17
        ~u_tgany2_44
              = ~u_tgany2_44.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = ~u_tgany2_44.18
        z     = rot_26(~u_id_46.16, zero)
        z.1   = ~u_tgany1_45.17
    
     3. ~u_id_46
              = ~u_id_46.16
        ~u_tgany1_45
              = ~u_tgany1_45.17
        ~u_tgany2_44
              = ~u_tgany2_44.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = zero
        z     = rot_26(~u_id_46.16, zero)
        z.1   = (~u_tgany1_45.17⊕~u_tgany2_44.18)
    
     4. ~u_id_46
              = ~u_id_46.16
        ~u_tgany1_45
              = ~u_tgany1_45.17
        ~u_tgany2_44
              = ~u_tgany2_44.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_45.17⊕~u_tgany2_44.18)
        z     = rot_26(~u_id_46.16, zero)
        z.1   = zero
    
     5. ~u_id_46
              = ~u_id_46.17
        ~u_tgany1_45
              = ~u_tgany1_45.18
        ~u_tgany2_44
              = ~u_tgany2_44.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = ~u_tgany1_45.18
        z     = (tgc_hash_0.20⊕rot_26(~u_id_46.17, tgc_hash_0.20))
        z.1   = ~u_tgany2_44.19
    
     6. ~u_id_46
              = ~u_id_46.17
        ~u_tgany1_45
              = ~u_tgany1_45.18
        ~u_tgany2_44
              = ~u_tgany2_44.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = ~u_tgany2_44.19
        z     = (tgc_hash_0.20⊕rot_26(~u_id_46.17, tgc_hash_0.20))
        z.1   = ~u_tgany1_45.18
    
     7. ~u_id_46
              = ~u_id_46.17
        ~u_tgany1_45
              = ~u_tgany1_45.18
        ~u_tgany2_44
              = ~u_tgany2_44.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = zero
        z     = (tgc_hash_0.20⊕rot_26(~u_id_46.17, tgc_hash_0.20))
        z.1   = (~u_tgany1_45.18⊕~u_tgany2_44.19)
    
     8. ~u_id_46
              = ~u_id_46.17
        ~u_tgany1_45
              = ~u_tgany1_45.18
        ~u_tgany2_44
              = ~u_tgany2_44.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = (~u_tgany1_45.18⊕~u_tgany2_44.19)
        z     = (tgc_hash_0.20⊕rot_26(~u_id_46.17, tgc_hash_0.20))
        z.1   = zero
    
     9. ~u_id_46
              = ~u_id_46.18
        ~u_tgany1_45
              = ~u_tgany1_45.19
        ~u_tgany2_44
              = ~u_tgany1_45.19
        tgc_hash_0
              = tgc_hash_0.21
        tgc_r1_0
              = tgc_r1_0.22
        z     = (tgc_hash_0.21⊕rot_26(~u_id_46.18, tgc_hash_0.21))
        z.1   = tgc_r1_0.22
    
    10. ~u_id_46
              = ~u_id_46.18
        ~u_tgany1_45
              = ~u_tgany1_45.19
        ~u_tgany2_44
              = ~u_tgany1_45.19
        tgc_hash_0
              = zero
        tgc_r1_0
              = tgc_r1_0.22
        z     = rot_26(~u_id_46.18, zero)
        z.1   = tgc_r1_0.22
    
    11. ~u_id_46
              = ~u_id_46.18
        ~u_tgany1_45
              = ~u_tgany1_45.19
        ~u_tgany2_44
              = ~u_tgany2_44.20
        tgc_hash_0
              = tgc_hash_0.21
        tgc_r1_0
              = tgc_r1_0.22
        z     = (tgc_hash_0.21⊕rot_26(~u_id_46.18, tgc_hash_0.21))
        z.1   = (~u_tgany1_45.19⊕~u_tgany2_44.20⊕tgc_r1_0.22)
    
    12. ~u_id_46
              = ~u_id_46.18
        ~u_tgany1_45
              = ~u_tgany1_45.19
        ~u_tgany2_44
              = ~u_tgany2_44.20
        tgc_hash_0
              = zero
        tgc_r1_0
              = tgc_r1_0.22
        z     = rot_26(~u_id_46.18, zero)
        z.1   = (~u_tgany1_45.19⊕~u_tgany2_44.20⊕tgc_r1_0.22)
    
    13. ~u_id_46
              = ~u_id_46.24
        ~u_tgany1_45
              = ~u_tgany1_45.25
        ~u_tgany2_44
              = ~u_tgany2_44.26
        tgc_hash_0
              = tgc_hash_0.27
        tgc_r1_0
              = (~u_tgany1_45.25⊕~u_tgany2_44.26⊕z.34)
        z     = (tgc_hash_0.27⊕rot_26(~u_id_46.24, tgc_hash_0.27))
        z.1   = z.34
    
    14. ~u_id_46
              = ~u_id_46.24
        ~u_tgany1_45
              = ~u_tgany1_45.25
        ~u_tgany2_44
              = ~u_tgany2_44.26
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_45.25⊕~u_tgany2_44.26⊕z.34)
        z     = rot_26(~u_id_46.24, zero)
        z.1   = z.34
    
    15. ~u_id_46
              = ~u_id_46.48
        ~u_tgany1_45
              = ~u_tgany1_45.49
        ~u_tgany2_44
              = ~u_tgany2_44.50
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany2_44.50⊕x.93)
        z     = rot_26(~u_id_46.48, zero)
        z.1   = (~u_tgany1_45.49⊕x.93)
    
    16. ~u_id_46
              = ~u_id_46.49
        ~u_tgany1_45
              = ~u_tgany1_45.50
        ~u_tgany2_44
              = ~u_tgany2_44.51
        tgc_hash_0
              = tgc_hash_0.52
        tgc_r1_0
              = (~u_tgany2_44.51⊕x.95)
        z     = (tgc_hash_0.52⊕rot_26(~u_id_46.49, tgc_hash_0.52))
        z.1   = (~u_tgany1_45.50⊕x.95)
    
    17. ~u_id_46
              = ~u_id_46.49
        ~u_tgany1_45
              = ~u_tgany1_45.50
        ~u_tgany2_44
              = ~u_tgany2_44.51
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_45.50⊕x.95)
        z     = rot_26(~u_id_46.49, zero)
        z.1   = (~u_tgany2_44.51⊕x.95)
    
    18. ~u_id_46
              = ~u_id_46.50
        ~u_tgany1_45
              = ~u_tgany1_45.51
        ~u_tgany2_44
              = ~u_tgany2_44.52
        tgc_hash_0
              = tgc_hash_0.53
        tgc_r1_0
              = (~u_tgany1_45.51⊕x.97)
        z     = (tgc_hash_0.53⊕rot_26(~u_id_46.50, tgc_hash_0.53))
        z.1   = (~u_tgany2_44.52⊕x.97)
  */

restriction equality:
  "∀ x_48 y_49 #i_50. (Eq_23( x_48, y_49 ) @ #i_50) ⇒ (x_48 = y_49)"
  // safety formula

lemma recentalive_tag:
  all-traces
  "∀ x_52 #i_53.
    (Alive_21( x_52, 'Tag' ) @ #i_53) ⇒
    (∃ y_54 #j_55 #k_56.
      (((Challenge_20( y_54, 'Reader' ) @ #k_56) ∧
        (Response_22( x_52, 'Tag' ) @ #j_55)) ∧
       (#k_56 < #j_55)) ∧
      (#j_55 < #i_53))"
/*
guarded formula characterizing all counter-examples:
"∃ x_52 #i_53.
  (Alive_21( x_52, 'Tag' ) @ #i_53)
 ∧
  ∀ y_54 #j_55 #k_56.
   (Challenge_20( y_54, 'Reader' ) @ #k_56) ∧
   (Response_22( x_52, 'Tag' ) @ #j_55)
  ⇒
   ((¬(#k_56 < #j_55)) ∨ (¬(#j_55 < #i_53)))"
*/
simplify
solve( Alive_21( x_52, 'Tag' ) @ #i_53 )
  case reader_38_manyto3_reader2
  solve( StF( ~pid, 'tgk3', ~u_tgany0_37 ) ▶₀ #i_53 )
    case reader_38_manyto2to3_reader1
    solve( !Reader_18( ~k_34, ~id_35 ) ▶₁ #i_53 )
      case Setup_31
      solve( !KU( lh_27((h(z)⊕rot_26(~id_35, h(z)))) ) @ #vk.2 )
        case tag_47_manyto5to6_tag1
        solve( splitEqs(0) )
          case split_case_7
          solve( !KU( (~u_tgany0_37⊕x) ) @ #vk.2 )
            case c_xor
            solve( splitEqs(1) )
              case split_case_1
              solve( !KU( ~u_tgany0_37 ) @ #vk.5 )
                case reader_38_manyto2to3_reader1
                solve( !KU( ~r2_39 ) @ #vk.5 )
                  case tag_47_manyto5to6_tag1
                  SOLVED // trace found
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma recentalive_reader:
  all-traces
  "∀ x_58 #i_59.
    (Alive_21( x_58, 'Reader' ) @ #i_59) ⇒
    (∃ y_60 #j_61 #k_62.
      (((Challenge_20( y_60, 'Tag' ) @ #k_62) ∧
        (Response_22( x_58, 'Reader' ) @ #j_61)) ∧
       (#k_62 < #j_61)) ∧
      (#j_61 < #i_59))"
/*
guarded formula characterizing all counter-examples:
"∃ x_58 #i_59.
  (Alive_21( x_58, 'Reader' ) @ #i_59)
 ∧
  ∀ y_60 #j_61 #k_62.
   (Challenge_20( y_60, 'Tag' ) @ #k_62) ∧
   (Response_22( x_58, 'Reader' ) @ #j_61)
  ⇒
   ((¬(#k_62 < #j_61)) ∨ (¬(#j_61 < #i_59)))"
*/
by sorry

lemma noninjectiveagreement_tag:
  all-traces
  "∀ t_64 #i_65.
    (Commit_25( <'T', 'R', t_64> ) @ #i_65) ⇒
    (∃ #j_66. Running_24( <'T', 'R', t_64> ) @ #j_66)"
/*
guarded formula characterizing all counter-examples:
"∃ t_64 #i_65.
  (Commit_25( <'T', 'R', t_64> ) @ #i_65)
 ∧
  ∀ #j_66. (Running_24( <'T', 'R', t_64> ) @ #j_66) ⇒ ⊥"
*/
by sorry

lemma noninjectiveagreement_reader:
  all-traces
  "∀ t_68 #i_69.
    (Commit_25( <'R', 'T', t_68> ) @ #i_69) ⇒
    (∃ #j_70. Running_24( <'R', 'T', t_68> ) @ #j_70)"
/*
guarded formula characterizing all counter-examples:
"∃ t_68 #i_69.
  (Commit_25( <'R', 'T', t_68> ) @ #i_69)
 ∧
  ∀ #j_70. (Running_24( <'R', 'T', t_68> ) @ #j_70) ⇒ ⊥"
*/
by sorry

lemma executable:
  exists-trace
  "∃ x_72 #i_73 #j_74.
    ((Alive_21( x_72, 'Reader' ) @ #i_73) ∧
     (Response_22( x_72, 'Tag' ) @ #j_74)) ∧
    (¬(∃ #k_75. (Response_22( x_72, 'Tag' ) @ #k_75) ∧ (¬(#j_74 = #k_75))))"
/*
guarded formula characterizing all satisfying traces:
"∃ x_72 #i_73 #j_74.
  (Alive_21( x_72, 'Reader' ) @ #i_73) ∧
  (Response_22( x_72, 'Tag' ) @ #j_74)
 ∧
  ∀ #k_75. (Response_22( x_72, 'Tag' ) @ #k_75) ⇒ #j_74 = #k_75"
*/
by sorry

/* All well-formedness checks were successful. */

end