theory CH07 begin

// Function signature and definition of the equational theory E

builtins: xor
functions: fst/1, h/1, lh_29/1, pair/2, rh_30/1, rot_28/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



/* looping facts with injective instances: StF/3 */

rule (modulo E) Setup_33:
   [ Fr( ~k_31 ), Fr( ~id_32 ) ]
  -->
   [ !Reader_20( ~k_31, ~id_32 ), !Tag_21( ~k_31, ~id_32 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) reader_40_1to2:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk2', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) reader_40_manyto2to3_reader1:
   [ StF( ~pid, 'tgk2', 'empty_tuple' ), Fr( ~r1_34 ) ]
  --[ Challenge_22( ~r1_34, 'Reader' ) ]->
   [ StF( ~pid, 'tgk3', ~r1_34 ), Out( ~r1_34 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) reader_40_manyto3_reader2:
   [
   StF( ~pid, 'tgk3', ~u_tgany0_39 ), !Reader_20( ~k_36, ~id_37 ),
   In( <r2_35, lh_29((hash_38⊕rot_28(~id_37, hash_38)))> )
   ]
  --[
  Alive_23( ~k_36, 'Tag' ), Response_24( ~k_36, 'Reader' ),
  Eq_25( h((~k_36⊕~u_tgany0_39⊕r2_35)), hash_38 ),
  Running_26( <'T', 'R', (~k_36⊕~u_tgany0_39⊕r2_35)> ),
  Commit_27( <'R', 'T', (~k_36⊕~u_tgany0_39⊕r2_35)> )
  ]->
   [ Out( rh_30((hash_38⊕rot_28(~id_37, hash_38))) ) ]

  /*
  rule (modulo AC) reader_40_manyto3_reader2:
     [
     StF( ~pid, 'tgk3', ~u_tgany0_39 ), !Reader_20( ~k_36, ~id_37 ),
     In( <r2_35, lh_29(z)> )
     ]
    --[
    Alive_23( ~k_36, 'Tag' ), Response_24( ~k_36, 'Reader' ),
    Eq_25( h(z.1), hash_38 ), Running_26( <'T', 'R', z.1> ),
    Commit_27( <'R', 'T', z.1> )
    ]->
     [ Out( rh_30(z) ) ]
    variants (modulo AC)
     1. ~id_37
              = ~id_37.16
        ~k_36 = ~k_36.17
        ~u_tgany0_39
              = ~u_tgany0_39.19
        hash_38
              = zero
        r2_35 = ~k_36.17
        z     = rot_28(~id_37.16, zero)
        z.1   = ~u_tgany0_39.19
    
     2. ~id_37
              = ~id_37.16
        ~k_36 = ~k_36.17
        ~u_tgany0_39
              = ~u_tgany0_39.19
        hash_38
              = zero
        r2_35 = ~u_tgany0_39.19
        z     = rot_28(~id_37.16, zero)
        z.1   = ~k_36.17
    
     3. ~id_37
              = ~id_37.16
        ~k_36 = ~k_36.17
        ~u_tgany0_39
              = ~u_tgany0_39.19
        hash_38
              = zero
        r2_35 = zero
        z     = rot_28(~id_37.16, zero)
        z.1   = (~k_36.17⊕~u_tgany0_39.19)
    
     4. ~id_37
              = ~id_37.16
        ~k_36 = ~k_36.17
        ~u_tgany0_39
              = ~u_tgany0_39.19
        hash_38
              = zero
        r2_35 = (~k_36.17⊕~u_tgany0_39.19)
        z     = rot_28(~id_37.16, zero)
        z.1   = zero
    
     5. ~id_37
              = ~id_37.17
        ~k_36 = ~k_36.18
        ~u_tgany0_39
              = ~u_tgany0_39.20
        hash_38
              = hash_38.21
        r2_35 = ~k_36.18
        z     = (hash_38.21⊕rot_28(~id_37.17, hash_38.21))
        z.1   = ~u_tgany0_39.20
    
     6. ~id_37
              = ~id_37.17
        ~k_36 = ~k_36.18
        ~u_tgany0_39
              = ~u_tgany0_39.20
        hash_38
              = hash_38.21
        r2_35 = ~u_tgany0_39.20
        z     = (hash_38.21⊕rot_28(~id_37.17, hash_38.21))
        z.1   = ~k_36.18
    
     7. ~id_37
              = ~id_37.17
        ~k_36 = ~k_36.18
        ~u_tgany0_39
              = ~u_tgany0_39.20
        hash_38
              = hash_38.21
        r2_35 = zero
        z     = (hash_38.21⊕rot_28(~id_37.17, hash_38.21))
        z.1   = (~k_36.18⊕~u_tgany0_39.20)
    
     8. ~id_37
              = ~id_37.17
        ~k_36 = ~k_36.18
        ~u_tgany0_39
              = ~u_tgany0_39.20
        hash_38
              = hash_38.21
        r2_35 = (~k_36.18⊕~u_tgany0_39.20)
        z     = (hash_38.21⊕rot_28(~id_37.17, hash_38.21))
        z.1   = zero
    
     9. ~id_37
              = ~id_37.18
        ~k_36 = ~k_36.19
        ~u_tgany0_39
              = ~k_36.19
        hash_38
              = hash_38.22
        r2_35 = r2_35.23
        z     = (hash_38.22⊕rot_28(~id_37.18, hash_38.22))
        z.1   = r2_35.23
    
    10. ~id_37
              = ~id_37.18
        ~k_36 = ~k_36.19
        ~u_tgany0_39
              = ~k_36.19
        hash_38
              = zero
        r2_35 = r2_35.23
        z     = rot_28(~id_37.18, zero)
        z.1   = r2_35.23
    
    11. ~id_37
              = ~id_37.18
        ~k_36 = ~k_36.19
        ~u_tgany0_39
              = ~u_tgany0_39.21
        hash_38
              = hash_38.22
        r2_35 = r2_35.23
        z     = (hash_38.22⊕rot_28(~id_37.18, hash_38.22))
        z.1   = (~k_36.19⊕~u_tgany0_39.21⊕r2_35.23)
    
    12. ~id_37
              = ~id_37.18
        ~k_36 = ~k_36.19
        ~u_tgany0_39
              = ~u_tgany0_39.21
        hash_38
              = zero
        r2_35 = r2_35.23
        z     = rot_28(~id_37.18, zero)
        z.1   = (~k_36.19⊕~u_tgany0_39.21⊕r2_35.23)
    
    13. ~id_37
              = ~id_37.23
        ~k_36 = ~k_36.24
        ~u_tgany0_39
              = ~u_tgany0_39.26
        hash_38
              = hash_38.27
        r2_35 = (~k_36.24⊕~u_tgany0_39.26⊕z.33)
        z     = (hash_38.27⊕rot_28(~id_37.23, hash_38.27))
        z.1   = z.33
    
    14. ~id_37
              = ~id_37.23
        ~k_36 = ~k_36.24
        ~u_tgany0_39
              = ~u_tgany0_39.26
        hash_38
              = zero
        r2_35 = (~k_36.24⊕~u_tgany0_39.26⊕z.33)
        z     = rot_28(~id_37.23, zero)
        z.1   = z.33
    
    15. ~id_37
              = ~id_37.66
        ~k_36 = ~k_36.67
        ~u_tgany0_39
              = ~u_tgany0_39.69
        hash_38
              = zero
        r2_35 = (~u_tgany0_39.69⊕x.130)
        z     = rot_28(~id_37.66, zero)
        z.1   = (~k_36.67⊕x.130)
    
    16. ~id_37
              = ~id_37.67
        ~k_36 = ~k_36.68
        ~u_tgany0_39
              = ~u_tgany0_39.70
        hash_38
              = hash_38.71
        r2_35 = (~u_tgany0_39.70⊕x.132)
        z     = (hash_38.71⊕rot_28(~id_37.67, hash_38.71))
        z.1   = (~k_36.68⊕x.132)
    
    17. ~id_37
              = ~id_37.68
        ~k_36 = ~k_36.69
        ~u_tgany0_39
              = ~u_tgany0_39.71
        hash_38
              = zero
        r2_35 = (~k_36.69⊕x.134)
        z     = rot_28(~id_37.68, zero)
        z.1   = (~u_tgany0_39.71⊕x.134)
    
    18. ~id_37
              = ~id_37.69
        ~k_36 = ~k_36.70
        ~u_tgany0_39
              = ~u_tgany0_39.72
        hash_38
              = hash_38.73
        r2_35 = (~k_36.70⊕x.136)
        z     = (hash_38.73⊕rot_28(~id_37.69, hash_38.73))
        z.1   = (~u_tgany0_39.72⊕x.136)
  */

rule (modulo E) tag_49_4to5:
   [ Fr( ~pid ) ] --> [ StF( ~pid, 'tgk5', 'empty_tuple' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) tag_49_manyto5to6_tag1:
   [
   StF( ~pid, 'tgk5', 'empty_tuple' ), In( r1_42 ), Fr( ~r2_41 ),
   !Tag_21( ~k_43, ~id_44 )
   ]
  --[
  Response_24( ~k_43, 'Tag' ), Challenge_22( ~r2_41, 'Tag' ),
  Running_26( <'R', 'T', (~k_43⊕~r2_41⊕r1_42)> )
  ]->
   [
   StF( ~pid, 'tgk6', <h((~k_43⊕~r2_41⊕r1_42)), ~k_43, r1_42, ~r2_41> ),
   Out( <~r2_41, 
         lh_29((h((~k_43⊕~r2_41⊕r1_42))⊕rot_28(~id_44, h((~k_43⊕~r2_41⊕r1_42)))))>
   )
   ]

  /*
  rule (modulo AC) tag_49_manyto5to6_tag1:
     [
     StF( ~pid, 'tgk5', 'empty_tuple' ), In( r1_42 ), Fr( ~r2_41 ),
     !Tag_21( ~k_43, ~id_44 )
     ]
    --[
    Response_24( ~k_43, 'Tag' ), Challenge_22( ~r2_41, 'Tag' ),
    Running_26( <'R', 'T', z> )
    ]->
     [
     StF( ~pid, 'tgk6', <h(z), ~k_43, r1_42, ~r2_41> ),
     Out( <~r2_41, lh_29((h(z)⊕rot_28(~id_44, h(z))))> )
     ]
    variants (modulo AC)
    1. ~k_43 = ~k_43.13
       ~r2_41
             = ~r2_41.15
       r1_42 = ~k_43.13
       z     = ~r2_41.15
    
    2. ~k_43 = ~k_43.13
       ~r2_41
             = ~r2_41.15
       r1_42 = ~r2_41.15
       z     = ~k_43.13
    
    3. ~k_43 = ~k_43.13
       ~r2_41
             = ~r2_41.15
       r1_42 = zero
       z     = (~k_43.13⊕~r2_41.15)
    
    4. ~k_43 = ~k_43.13
       ~r2_41
             = ~r2_41.15
       r1_42 = (~k_43.13⊕~r2_41.15)
       z     = zero
    
    5. ~k_43 = ~k_43.14
       ~r2_41
             = ~k_43.14
       r1_42 = r1_42.17
       z     = r1_42.17
    
    6. ~k_43 = ~k_43.14
       ~r2_41
             = ~r2_41.16
       r1_42 = r1_42.17
       z     = (~k_43.14⊕~r2_41.16⊕r1_42.17)
    
    7. ~k_43 = ~k_43.18
       ~r2_41
             = ~r2_41.20
       r1_42 = (~k_43.18⊕~r2_41.20⊕z.25)
       z     = z.25
    
    8. ~k_43 = ~k_43.234
       ~r2_41
             = ~r2_41.236
       r1_42 = (~r2_41.236⊕x.465)
       z     = (~k_43.234⊕x.465)
    
    9. ~k_43 = ~k_43.236
       ~r2_41
             = ~r2_41.238
       r1_42 = (~k_43.236⊕x.469)
       z     = (~r2_41.238⊕x.469)
  */

rule (modulo E) tag_49_manyto6_tag2:
   [
   StF( ~pid, 'tgk6', <tgc_hash_0, ~u_tgany1_47, tgc_r1_0, ~u_tgany2_46> ),
   In( rh_30((tgc_hash_0⊕rot_28(~u_id_48, tgc_hash_0))) ),
   !Tag_21( ~u_tgany1_47, ~u_id_48 )
   ]
  --[
  Alive_23( ~u_tgany1_47, 'Reader' ),
  Commit_27( <'T', 'R', (~u_tgany1_47⊕~u_tgany2_46⊕tgc_r1_0)> )
  ]->
   [ ]

  /*
  rule (modulo AC) tag_49_manyto6_tag2:
     [
     StF( ~pid, 'tgk6', <tgc_hash_0, ~u_tgany1_47, tgc_r1_0, ~u_tgany2_46> ),
     In( rh_30(z) ), !Tag_21( ~u_tgany1_47, ~u_id_48 )
     ]
    --[ Alive_23( ~u_tgany1_47, 'Reader' ), Commit_27( <'T', 'R', z.1> ) ]->
     [ ]
    variants (modulo AC)
     1. ~u_id_48
              = ~u_id_48.16
        ~u_tgany1_47
              = ~u_tgany1_47.17
        ~u_tgany2_46
              = ~u_tgany2_46.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = ~u_tgany1_47.17
        z     = rot_28(~u_id_48.16, zero)
        z.1   = ~u_tgany2_46.18
    
     2. ~u_id_48
              = ~u_id_48.16
        ~u_tgany1_47
              = ~u_tgany1_47.17
        ~u_tgany2_46
              = ~u_tgany2_46.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = ~u_tgany2_46.18
        z     = rot_28(~u_id_48.16, zero)
        z.1   = ~u_tgany1_47.17
    
     3. ~u_id_48
              = ~u_id_48.16
        ~u_tgany1_47
              = ~u_tgany1_47.17
        ~u_tgany2_46
              = ~u_tgany2_46.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = zero
        z     = rot_28(~u_id_48.16, zero)
        z.1   = (~u_tgany1_47.17⊕~u_tgany2_46.18)
    
     4. ~u_id_48
              = ~u_id_48.16
        ~u_tgany1_47
              = ~u_tgany1_47.17
        ~u_tgany2_46
              = ~u_tgany2_46.18
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_47.17⊕~u_tgany2_46.18)
        z     = rot_28(~u_id_48.16, zero)
        z.1   = zero
    
     5. ~u_id_48
              = ~u_id_48.17
        ~u_tgany1_47
              = ~u_tgany1_47.18
        ~u_tgany2_46
              = ~u_tgany2_46.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = ~u_tgany1_47.18
        z     = (tgc_hash_0.20⊕rot_28(~u_id_48.17, tgc_hash_0.20))
        z.1   = ~u_tgany2_46.19
    
     6. ~u_id_48
              = ~u_id_48.17
        ~u_tgany1_47
              = ~u_tgany1_47.18
        ~u_tgany2_46
              = ~u_tgany2_46.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = ~u_tgany2_46.19
        z     = (tgc_hash_0.20⊕rot_28(~u_id_48.17, tgc_hash_0.20))
        z.1   = ~u_tgany1_47.18
    
     7. ~u_id_48
              = ~u_id_48.17
        ~u_tgany1_47
              = ~u_tgany1_47.18
        ~u_tgany2_46
              = ~u_tgany2_46.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = zero
        z     = (tgc_hash_0.20⊕rot_28(~u_id_48.17, tgc_hash_0.20))
        z.1   = (~u_tgany1_47.18⊕~u_tgany2_46.19)
    
     8. ~u_id_48
              = ~u_id_48.17
        ~u_tgany1_47
              = ~u_tgany1_47.18
        ~u_tgany2_46
              = ~u_tgany2_46.19
        tgc_hash_0
              = tgc_hash_0.20
        tgc_r1_0
              = (~u_tgany1_47.18⊕~u_tgany2_46.19)
        z     = (tgc_hash_0.20⊕rot_28(~u_id_48.17, tgc_hash_0.20))
        z.1   = zero
    
     9. ~u_id_48
              = ~u_id_48.18
        ~u_tgany1_47
              = ~u_tgany1_47.19
        ~u_tgany2_46
              = ~u_tgany1_47.19
        tgc_hash_0
              = tgc_hash_0.21
        tgc_r1_0
              = tgc_r1_0.22
        z     = (tgc_hash_0.21⊕rot_28(~u_id_48.18, tgc_hash_0.21))
        z.1   = tgc_r1_0.22
    
    10. ~u_id_48
              = ~u_id_48.18
        ~u_tgany1_47
              = ~u_tgany1_47.19
        ~u_tgany2_46
              = ~u_tgany1_47.19
        tgc_hash_0
              = zero
        tgc_r1_0
              = tgc_r1_0.22
        z     = rot_28(~u_id_48.18, zero)
        z.1   = tgc_r1_0.22
    
    11. ~u_id_48
              = ~u_id_48.18
        ~u_tgany1_47
              = ~u_tgany1_47.19
        ~u_tgany2_46
              = ~u_tgany2_46.20
        tgc_hash_0
              = tgc_hash_0.21
        tgc_r1_0
              = tgc_r1_0.22
        z     = (tgc_hash_0.21⊕rot_28(~u_id_48.18, tgc_hash_0.21))
        z.1   = (~u_tgany1_47.19⊕~u_tgany2_46.20⊕tgc_r1_0.22)
    
    12. ~u_id_48
              = ~u_id_48.18
        ~u_tgany1_47
              = ~u_tgany1_47.19
        ~u_tgany2_46
              = ~u_tgany2_46.20
        tgc_hash_0
              = zero
        tgc_r1_0
              = tgc_r1_0.22
        z     = rot_28(~u_id_48.18, zero)
        z.1   = (~u_tgany1_47.19⊕~u_tgany2_46.20⊕tgc_r1_0.22)
    
    13. ~u_id_48
              = ~u_id_48.24
        ~u_tgany1_47
              = ~u_tgany1_47.25
        ~u_tgany2_46
              = ~u_tgany2_46.26
        tgc_hash_0
              = tgc_hash_0.27
        tgc_r1_0
              = (~u_tgany1_47.25⊕~u_tgany2_46.26⊕z.34)
        z     = (tgc_hash_0.27⊕rot_28(~u_id_48.24, tgc_hash_0.27))
        z.1   = z.34
    
    14. ~u_id_48
              = ~u_id_48.24
        ~u_tgany1_47
              = ~u_tgany1_47.25
        ~u_tgany2_46
              = ~u_tgany2_46.26
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_47.25⊕~u_tgany2_46.26⊕z.34)
        z     = rot_28(~u_id_48.24, zero)
        z.1   = z.34
    
    15. ~u_id_48
              = ~u_id_48.48
        ~u_tgany1_47
              = ~u_tgany1_47.49
        ~u_tgany2_46
              = ~u_tgany2_46.50
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany2_46.50⊕x.93)
        z     = rot_28(~u_id_48.48, zero)
        z.1   = (~u_tgany1_47.49⊕x.93)
    
    16. ~u_id_48
              = ~u_id_48.49
        ~u_tgany1_47
              = ~u_tgany1_47.50
        ~u_tgany2_46
              = ~u_tgany2_46.51
        tgc_hash_0
              = tgc_hash_0.52
        tgc_r1_0
              = (~u_tgany2_46.51⊕x.95)
        z     = (tgc_hash_0.52⊕rot_28(~u_id_48.49, tgc_hash_0.52))
        z.1   = (~u_tgany1_47.50⊕x.95)
    
    17. ~u_id_48
              = ~u_id_48.49
        ~u_tgany1_47
              = ~u_tgany1_47.50
        ~u_tgany2_46
              = ~u_tgany2_46.51
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_47.50⊕x.95)
        z     = rot_28(~u_id_48.49, zero)
        z.1   = (~u_tgany2_46.51⊕x.95)
    
    18. ~u_id_48
              = ~u_id_48.50
        ~u_tgany1_47
              = ~u_tgany1_47.51
        ~u_tgany2_46
              = ~u_tgany2_46.52
        tgc_hash_0
              = tgc_hash_0.53
        tgc_r1_0
              = (~u_tgany1_47.51⊕x.97)
        z     = (tgc_hash_0.53⊕rot_28(~u_id_48.50, tgc_hash_0.53))
        z.1   = (~u_tgany2_46.52⊕x.97)
  */

restriction equality:
  "∀ x_50 y_51 #i_52. (Eq_25( x_50, y_51 ) @ #i_52) ⇒ (x_50 = y_51)"
  // safety formula

lemma recentalive_tag:
  all-traces
  "∀ x_54 #i_55.
    (Alive_23( x_54, 'Tag' ) @ #i_55) ⇒
    (∃ y_56 #j_57 #k_58.
      (((Challenge_22( y_56, 'Reader' ) @ #k_58) ∧
        (Response_24( x_54, 'Tag' ) @ #j_57)) ∧
       (#k_58 < #j_57)) ∧
      (#j_57 < #i_55))"
/*
guarded formula characterizing all counter-examples:
"∃ x_54 #i_55.
  (Alive_23( x_54, 'Tag' ) @ #i_55)
 ∧
  ∀ y_56 #j_57 #k_58.
   (Challenge_22( y_56, 'Reader' ) @ #k_58) ∧
   (Response_24( x_54, 'Tag' ) @ #j_57)
  ⇒
   ((¬(#k_58 < #j_57)) ∨ (¬(#j_57 < #i_55)))"
*/
by sorry

lemma recentalive_reader:
  all-traces
  "∀ x_60 #i_61.
    (Alive_23( x_60, 'Reader' ) @ #i_61) ⇒
    (∃ y_62 #j_63 #k_64.
      (((Challenge_22( y_62, 'Tag' ) @ #k_64) ∧
        (Response_24( x_60, 'Reader' ) @ #j_63)) ∧
       (#k_64 < #j_63)) ∧
      (#j_63 < #i_61))"
/*
guarded formula characterizing all counter-examples:
"∃ x_60 #i_61.
  (Alive_23( x_60, 'Reader' ) @ #i_61)
 ∧
  ∀ y_62 #j_63 #k_64.
   (Challenge_22( y_62, 'Tag' ) @ #k_64) ∧
   (Response_24( x_60, 'Reader' ) @ #j_63)
  ⇒
   ((¬(#k_64 < #j_63)) ∨ (¬(#j_63 < #i_61)))"
*/
by sorry

lemma noninjectiveagreement_tag:
  all-traces
  "∀ t_66 #i_67.
    (Commit_27( <'T', 'R', t_66> ) @ #i_67) ⇒
    (∃ #j_68. Running_26( <'T', 'R', t_66> ) @ #j_68)"
/*
guarded formula characterizing all counter-examples:
"∃ t_66 #i_67.
  (Commit_27( <'T', 'R', t_66> ) @ #i_67)
 ∧
  ∀ #j_68. (Running_26( <'T', 'R', t_66> ) @ #j_68) ⇒ ⊥"
*/
by sorry

lemma noninjectiveagreement_reader:
  all-traces
  "∀ t_70 #i_71.
    (Commit_27( <'R', 'T', t_70> ) @ #i_71) ⇒
    (∃ #j_72. Running_26( <'R', 'T', t_70> ) @ #j_72)"
/*
guarded formula characterizing all counter-examples:
"∃ t_70 #i_71.
  (Commit_27( <'R', 'T', t_70> ) @ #i_71)
 ∧
  ∀ #j_72. (Running_26( <'R', 'T', t_70> ) @ #j_72) ⇒ ⊥"
*/
simplify
solve( Commit_27( <'R', 'T', t_70> ) @ #i_71 )
  case reader_40_manyto3_reader2
  solve( StF( ~pid, 'tgk3', ~u_tgany0_39 ) ▶₀ #i_71 )
    case reader_40_manyto2to3_reader1
    solve( !Reader_20( ~k_36, ~id_37 ) ▶₁ #i_71 )
      case Setup_33
      solve( !KU( lh_29((h(t_70)⊕rot_28(~id_37, h(t_70)))) ) @ #vk.2 )
        case c_lh_29
        solve( !KU( (h(t_70)⊕rot_28(~id_37, h(t_70))) ) @ #vk.3 )
          case c_xor
          solve( !KU( rot_28(~id_37, h(t_70)) ) @ #vk.4 )
            case c_rot_28
            by solve( !KU( ~id_37 ) @ #vk.6 )
          qed
        next
          case coerce
          solve( !KD( (h(t_70)⊕rot_28(~id_37, h(t_70))) ) ▶₀ #vk.1 )
            case reader_40_manyto2to3_reader1
            by contradiction /* impossible chain */
          next
            case reader_40_manyto3_reader2
            by solve( (#vl, 0) ~~> (#vk.1, 0) )
          next
            case tag_49_manyto5to6_tag1
            solve( (#vl, 0) ~~> (#vk.1, 0) )
              case d_0_fst
              by contradiction /* impossible chain */
            next
              case d_0_snd
              by solve( (#vr.4, 0) ~~> (#vk.1, 0) )
            qed
          qed
        qed
      next
        case tag_49_manyto5to6_tag1
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma executable:
  exists-trace
  "∃ x_74 #i_75 #j_76.
    ((Alive_23( x_74, 'Reader' ) @ #i_75) ∧
     (Response_24( x_74, 'Tag' ) @ #j_76)) ∧
    (¬(∃ #k_77. (Response_24( x_74, 'Tag' ) @ #k_77) ∧ (¬(#j_76 = #k_77))))"
/*
guarded formula characterizing all satisfying traces:
"∃ x_74 #i_75 #j_76.
  (Alive_23( x_74, 'Reader' ) @ #i_75) ∧
  (Response_24( x_74, 'Tag' ) @ #j_76)
 ∧
  ∀ #k_77. (Response_24( x_74, 'Tag' ) @ #k_77) ⇒ #j_76 = #k_77"
*/
by sorry

/* All well-formedness checks were successful. */

end