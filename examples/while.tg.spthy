theory while___tg
begin

functions: f_18/1

rule A_20___NoneTo0To1:
  [Fr(~pid)]--[]->[StF(~pid, 'tgk1', 'empty_tuple')]

rule A_20___ManyTo1ToMany:
  [StF(~pid, 'tgk1', 'empty_tuple')]--[]->[StB(~pid, 'tgk1', <f_18('2')>)]

rule A_20___1To3To6:
  [StB(~pid, 'tgk1', <f_18(u_tgany0_19)>)]--[]->[StF(~pid, 'tgk6', <f_18(u_tgany0_19)>)]

rule A_20___1To4To8:
  [StB(~pid, 'tgk1', <tgc_a_0>)]--[TgCellPatMatch_2(tgc_a_0)]->[StF(~pid, 'tgk8', <tgc_a_0>)]

rule A_20___ManyTo6To7:
    [ StF(~pid, 'tgk6', <tgc_a_0>)
    ]
  --[ 
    ]->
    [ StF(~pid, 'tgk7', <tgc_a_0>)
    , Out(<'while', tgc_a_0>)
    ]

rule A_20___ManyTo7To8:
  [StF(~pid, 'tgk7', <tgc_a_0>)]--[]->[StF(~pid, 'tgk8', <f_18(tgc_a_0)>)]

rule A_20___ManyTo8To9:
    [ StF(~pid, 'tgk8', <tgc_a_0>)
    ]
  --[ 
    ]->
    [ StF(~pid, 'tgk9', 'empty_tuple')
    , Out(<'done', tgc_a_0>)
    ]

rule A_20___ManyTo9ToNone:
  [StF(~pid, 'tgk9', 'empty_tuple')]--[]->[]

restriction tg_cell_pat_match_restriction2:
  "All #i_21 cell_22 u_tgany0_19 .
     ((TgCellPatMatch_2(cell_22) @ #i_21) ==> (not ((cell_22) = (f_18(
     u_tgany0_19)))))"

end

