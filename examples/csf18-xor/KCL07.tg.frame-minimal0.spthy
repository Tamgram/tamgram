theory KCL07
begin

builtins: xor, hashing

rule Setup_23:
    [ Fr(~k_21)
    , Fr(~id_22)
    ]
  --[ OnlyOnce_18()
    ]->
    [ !Reader_19(~k_21, ~id_22)
    , !Tag_20(~k_21, ~id_22)
    ]

rule TgRulereader_31_1to2:
  [Fr(~pid)]--[]->[St(~pid, 'tgk2', 'empty_tuple')]

rule TgRulereader_31_2to3:
    [ St(~pid, 'tgk2', 'empty_tuple')
    , Fr(~r1_27)
    ]
  --[ Challenge_24(~r1_27, 'Reader')
    ]->
    [ St(~pid, 'tgk3', <~r1_27>)
    , Out(~r1_27)
    ]

rule TgEndreader_31_3:
    [ St(~pid, 'tgk3', <tgc_r1_0>)
    , !Reader_19(~k_29, ~id_30)
    , In(xoredhash_28)
    ]
  --[ Alive_25(~k_29, 'Tag')
    , Eq_26(xoredhash_28, ((~id_30) XOR (h(<tgc_r1_0, ~k_29>))))
    ]->
    [ 
    ]

rule tag_37:
    [ In(r1_34)
    , Fr(~r2_33)
    , !Tag_20(~k_35, ~id_36)
    ]
  --[ Response_32(~k_35, 'Tag')
    ]->
    [ Out(<((~id_36) XOR (~r2_33)), ((h(<r1_34, ~k_35>)) XOR (~r2_33))>)
    ]

restriction equality:
  "All x_38 y_39 #i_40 .
     ((Eq_26(x_38, y_39) @ #i_40) ==> (((x_38) = (y_39))))"

restriction unique:
  "All #i_42 #j_43 .
     ((((OnlyOnce_18() @ #i_42) & (OnlyOnce_18() @ #j_43))) ==> (#i_42 = #j_43))"

lemma recentalive_tag []:
  all-traces
  "All x_45 #i_46 .
     ((Alive_25(x_45, 'Tag') @ #i_46) ==> (Ex y_47 #j_48 #k_49 .
                                             ((((((Challenge_24(y_47, 'Reader') @ #k_49) & (Response_32(
                                             x_45, 'Tag') @ #j_48))) & (#k_49 < #j_48))) & (#j_48 < #i_46))))"

lemma executable []:
  exists-trace
  "Ex x_51 #i_52 #j_53 .
     ((((Alive_25(x_51, 'Tag') @ #i_52) & (Response_32(x_51, 'Tag') @ #j_53))) & (not 
     Ex #k_54 .
       ((Response_32(x_51, 'Tag') @ #k_54) & (not #j_53 = #k_54))))"

end

