theory CH07
begin

builtins: xor, hashing

functions: rot_26/2

functions: lh_27/1

functions: rh_28/1

rule Setup_31:
    [ Fr(~k_29)
    , Fr(~id_30)
    ]
  --[ 
    ]->
    [ !Reader_18(~k_29, ~id_30)
    , !Tag_19(~k_29, ~id_30)
    ]

rule TgRulereader_38_1to2:
  [Fr(~pid)]--[]->[St(~pid, 'tgk2', 'empty_tuple')]

rule TgRulereader_38_2to3:
    [ St(~pid, 'tgk2', 'empty_tuple')
    , Fr(~r1_32)
    ]
  --[ Challenge_20(~r1_32, 'Reader')
    ]->
    [ St(~pid, 'tgk3', <~r1_32>)
    , Out(~r1_32)
    ]

rule TgEndreader_38_3:
    [ St(~pid, 'tgk3', <~u_tgany0_37>)
    , !Reader_18(~k_34, ~id_35)
    , In(<r2_33, lh_27(((rot_26(~id_35, hash_36)) XOR (hash_36)))>)
    ]
  --[ Alive_21(~k_34, 'Tag')
    , Response_22(~k_34, 'Reader')
    , Eq_23(h(((((~u_tgany0_37) XOR (r2_33))) XOR (~k_34))), hash_36)
    , Running_24(<'T', 'R', <((((~k_34) XOR (~u_tgany0_37))) XOR (r2_33))>>)
    , Commit_25(<'R', 'T', <((((~k_34) XOR (~u_tgany0_37))) XOR (r2_33))>>)
    ]->
    [ Out(rh_28(((rot_26(~id_35, hash_36)) XOR (hash_36))))
    ]

rule TgRuletag_47_4to5:
  [Fr(~pid)]--[]->[St(~pid, 'tgk5', 'empty_tuple')]

rule TgRuletag_47_5to6:
    [ St(~pid, 'tgk5', 'empty_tuple')
    , In(r1_40)
    , Fr(~r2_39)
    , !Tag_19(~k_41, ~id_42)
    ]
  --[ Response_22(~k_41, 'Tag')
    , Challenge_20(~r2_39, 'Tag')
    , Running_24(<'R', 'T', <((((~k_41) XOR (r1_40))) XOR (~r2_39))>>)
    ]->
    [ St(~pid, 'tgk6', <h(((((r1_40) XOR (~r2_39))) XOR (~k_41))), ~k_41, r1_40, ~r2_39>)
    , Out(<~r2_39, lh_27(((rot_26(~id_42, h(((((r1_40) XOR (~r2_39))) XOR (~k_41))))) XOR (h(((((r1_40) XOR (~r2_39))) XOR (~k_41))))))>)
    ]

rule TgEndtag_47_6:
    [ St(~pid, 'tgk6', <tgc_hash_0, ~u_tgany1_45, tgc_r1_0, ~u_tgany2_44>)
    , In(rh_28(((rot_26(~u_id_46, tgc_hash_0)) XOR (tgc_hash_0))))
    , !Tag_19(~u_tgany1_45, ~u_id_46)
    ]
  --[ Alive_21(~u_tgany1_45, 'Reader')
    , Commit_25(<'T', 'R', <((((~u_tgany1_45) XOR (tgc_r1_0))) XOR (~u_tgany2_44))>>)
    ]->
    [ 
    ]

restriction equality:
  "All x_48 y_49 #i_50 .
     ((Eq_23(x_48, y_49) @ #i_50) ==> (((x_48) = (y_49))))"

lemma recentalive_tag []:
  all-traces
  "All x_52 #i_53 .
     ((Alive_21(x_52, 'Tag') @ #i_53) ==> (Ex y_54 #j_55 #k_56 .
                                             ((((((Challenge_20(y_54, 'Reader') @ #k_56) & (Response_22(
                                             x_52, 'Tag') @ #j_55))) & (#k_56 < #j_55))) & (#j_55 < #i_53))))"

lemma recentalive_reader []:
  all-traces
  "All x_58 #i_59 .
     ((Alive_21(x_58, 'Reader') @ #i_59) ==> (Ex y_60 #j_61 #k_62 .
                                                ((((((Challenge_20(y_60, 'Tag') @ #k_62) & (Response_22(
                                                x_58, 'Reader') @ #j_61))) & (#k_62 < #j_61))) & (#j_61 < #i_59))))"

lemma noninjectiveagreement_tag []:
  all-traces
  "All t_64 #i_65 .
     ((Commit_25(<'T', 'R', t_64>) @ #i_65) ==> (Ex #j_66 .
                                                   Running_24(<'T', 'R', t_64>) @ #j_66))"

lemma noninjectiveagreement_reader []:
  all-traces
  "All t_68 #i_69 .
     ((Commit_25(<'R', 'T', t_68>) @ #i_69) ==> (Ex #j_70 .
                                                   Running_24(<'R', 'T', t_68>) @ #j_70))"

lemma executable []:
  exists-trace
  "Ex x_72 #i_73 #j_74 .
     ((((Alive_21(x_72, 'Reader') @ #i_73) & (Response_22(x_72, 'Tag') @ #j_74))) & (not 
     Ex #k_75 .
       ((Response_22(x_72, 'Tag') @ #k_75) & (not #j_74 = #k_75))))"

end

