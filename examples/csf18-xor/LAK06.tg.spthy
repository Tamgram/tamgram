theory LAK06___tg
begin

builtins: xor, hashing

rule setup_28___NoneTo1ToNone:
    [ Fr(~pid)
    , Fr(~k_27)
    ]
  --[ OnlyOnce_20('setup')
    , Create_25(~k_27)
    ]->
    [ !Reader_21(~k_27)
    , !Tag_22(~k_27)
    ]

rule reader_34___NoneTo4To5___initiatereader:
    [ Fr(~pid)
    , !Reader_21(~k_30)
    , Fr(~r0_29)
    ]
  --[ OnlyOnce_20('initiareader')
    ]->
    [ StF(~pid, 'tgk5', <~k_30, ~r0_29>)
    , Out(~r0_29)
    ]

rule reader_34___ManyTo5ToNone___acceptreader:
    [ StF(~pid, 'tgk5', <~u_tgany0_33, ~u_tgany1_32>)
    , In(<r1_31, h(((((~u_tgany1_32) XOR (r1_31))) XOR (~u_tgany0_33)))>)
    ]
  --[ Commit_23(<'R', 'T', <~u_tgany0_33, ~u_tgany1_32, r1_31>>)
    , Running_26(<'T', 'R', <~u_tgany0_33, ~u_tgany1_32, r1_31>>)
    ]->
    [ Out(h(((((h(((((~u_tgany1_32) XOR (r1_31))) XOR (~u_tgany0_33)))) XOR (~u_tgany0_33))) XOR (~u_tgany1_32))))
    ]

rule tag_40___NoneTo8To9___tag1:
    [ Fr(~pid)
    , !Tag_22(~k_37)
    , Fr(~r1_35)
    , In(r0_36)
    ]
  --[ Running_26(<'R', 'T', <~k_37, r0_36, ~r1_35>>)
    ]->
    [ StF(~pid, 'tgk9', <~k_37, r0_36, ~r1_35>)
    , Out(<~r1_35, h(((((r0_36) XOR (~r1_35))) XOR (~k_37)))>)
    ]

rule tag_40___ManyTo9ToNone___accepttag:
    [ StF(~pid, 'tgk9', <~u_tgany2_39, tgc_r0_0, ~u_tgany3_38>)
    , In(h(((((h(((((tgc_r0_0) XOR (~u_tgany3_38))) XOR (~u_tgany2_39)))) XOR (~u_tgany2_39))) XOR (tgc_r0_0))))
    ]
  --[ Commit_23(<'T', 'R', <~u_tgany2_39, tgc_r0_0, ~u_tgany3_38>>)
    , FinTag_24()
    ]->
    [ 
    ]

lemma executable []:
  exists-trace
  "((Ex #i_41 .
       FinTag_24() @ #i_41) & (All x_42 #i1_43 #i2_44 .
                                 ((((OnlyOnce_20(x_42) @ #i1_43) & (OnlyOnce_20(
                                 x_42) @ #i2_44))) ==> (#i1_43 = #i2_44))))"

lemma helpingSecrecy [reuse]:
  all-traces
  "All k_46 #i_47 .
     ((Create_25(k_46) @ #i_47) ==> (not Ex #j_48 .
                                           K(k_46) @ #j_48))"

lemma noninjectiveagreementTAG [use_induction]:
  all-traces
  "All t_50 #i_51 .
     ((Commit_23(<'T', 'R', t_50>) @ #i_51) ==> (Ex #j_52 .
                                                   Running_26(<'T', 'R', t_50>) @ #j_52))"

lemma noninjectiveagreementREADER [use_induction]:
  all-traces
  "All t_54 #i_55 .
     ((Commit_23(<'R', 'T', t_54>) @ #i_55) ==> (Ex #j_56 .
                                                   Running_26(<'R', 'T', t_54>) @ #j_56))"

end

