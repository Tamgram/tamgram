theory CH07 begin

// Function signature and definition of the equational theory E

builtins: xor
functions: fst/1, h/1, lh_27/1, pair/2, rh_28/1, rot_26/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



/* looping facts with injective instances: St/2 */

rule (modulo E) Setup_31:
   [ Fr( ~k_29 ), Fr( ~id_30 ) ]
  -->
   [ !Reader_18( ~k_29, ~id_30 ), !Tag_19( ~k_29, ~id_30 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TgRulereader_38_1to2:
   [ Fr( ~pid ) ] --> [ St( ~pid, 'tgk2' ), Cell( ~pid, 'pid', ~pid ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TgRulereader_38_2to3:
   [ St( ~pid, 'tgk2' ), Fr( ~r1_32 ) ]
  --[ Challenge_20( ~r1_32, 'Reader' ) ]->
   [ St( ~pid, 'tgk3' ), Cell( ~pid, 'r1', ~r1_32 ), Out( ~r1_32 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TgEndreader_38_3:
   [
   St( ~pid, 'tgk3' ), Cell( ~pid, 'r1', ~u_tgany0_37 ),
   !Reader_18( ~k_34, ~id_35 ),
   In( <r2_33, lh_27((hash_36⊕rot_26(~id_35, hash_36)))> )
   ]
  --[
  Alive_21( ~k_34, 'Tag' ), Response_22( ~k_34, 'Reader' ),
  Eq_23( h((~k_34⊕~u_tgany0_37⊕r2_33)), hash_36 ),
  Running_24( <'T', 'R', (~k_34⊕~u_tgany0_37⊕r2_33)> ),
  Commit_25( <'R', 'T', (~k_34⊕~u_tgany0_37⊕r2_33)> )
  ]->
   [ Out( rh_28((hash_36⊕rot_26(~id_35, hash_36))) ) ]

  /*
  rule (modulo AC) TgEndreader_38_3:
     [
     St( ~pid, 'tgk3' ), Cell( ~pid, 'r1', ~u_tgany0_37 ),
     !Reader_18( ~k_34, ~id_35 ), In( <r2_33, lh_27(z)> )
     ]
    --[
    Alive_21( ~k_34, 'Tag' ), Response_22( ~k_34, 'Reader' ),
    Eq_23( h(z.1), hash_36 ), Running_24( <'T', 'R', z.1> ),
    Commit_25( <'R', 'T', z.1> )
    ]->
     [ Out( rh_28(z) ) ]
    variants (modulo AC)
     1. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = zero
        r2_33 = ~k_34.18
        z     = rot_26(~id_35.17, zero)
        z.1   = ~u_tgany0_37.20
    
     2. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = zero
        r2_33 = ~u_tgany0_37.20
        z     = rot_26(~id_35.17, zero)
        z.1   = ~k_34.18
    
     3. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = zero
        r2_33 = zero
        z     = rot_26(~id_35.17, zero)
        z.1   = (~k_34.18⊕~u_tgany0_37.20)
    
     4. ~id_35
              = ~id_35.17
        ~k_34 = ~k_34.18
        ~u_tgany0_37
              = ~u_tgany0_37.20
        hash_36
              = zero
        r2_33 = (~k_34.18⊕~u_tgany0_37.20)
        z     = rot_26(~id_35.17, zero)
        z.1   = zero
    
     5. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~u_tgany0_37.21
        hash_36
              = hash_36.22
        r2_33 = ~k_34.19
        z     = (hash_36.22⊕rot_26(~id_35.18, hash_36.22))
        z.1   = ~u_tgany0_37.21
    
     6. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~u_tgany0_37.21
        hash_36
              = hash_36.22
        r2_33 = ~u_tgany0_37.21
        z     = (hash_36.22⊕rot_26(~id_35.18, hash_36.22))
        z.1   = ~k_34.19
    
     7. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~u_tgany0_37.21
        hash_36
              = hash_36.22
        r2_33 = zero
        z     = (hash_36.22⊕rot_26(~id_35.18, hash_36.22))
        z.1   = (~k_34.19⊕~u_tgany0_37.21)
    
     8. ~id_35
              = ~id_35.18
        ~k_34 = ~k_34.19
        ~u_tgany0_37
              = ~u_tgany0_37.21
        hash_36
              = hash_36.22
        r2_33 = (~k_34.19⊕~u_tgany0_37.21)
        z     = (hash_36.22⊕rot_26(~id_35.18, hash_36.22))
        z.1   = zero
    
     9. ~id_35
              = ~id_35.19
        ~k_34 = ~k_34.20
        ~u_tgany0_37
              = ~k_34.20
        hash_36
              = hash_36.23
        r2_33 = r2_33.24
        z     = (hash_36.23⊕rot_26(~id_35.19, hash_36.23))
        z.1   = r2_33.24
    
    10. ~id_35
              = ~id_35.19
        ~k_34 = ~k_34.20
        ~u_tgany0_37
              = ~k_34.20
        hash_36
              = zero
        r2_33 = r2_33.24
        z     = rot_26(~id_35.19, zero)
        z.1   = r2_33.24
    
    11. ~id_35
              = ~id_35.19
        ~k_34 = ~k_34.20
        ~u_tgany0_37
              = ~u_tgany0_37.22
        hash_36
              = hash_36.23
        r2_33 = r2_33.24
        z     = (hash_36.23⊕rot_26(~id_35.19, hash_36.23))
        z.1   = (~k_34.20⊕~u_tgany0_37.22⊕r2_33.24)
    
    12. ~id_35
              = ~id_35.19
        ~k_34 = ~k_34.20
        ~u_tgany0_37
              = ~u_tgany0_37.22
        hash_36
              = zero
        r2_33 = r2_33.24
        z     = rot_26(~id_35.19, zero)
        z.1   = (~k_34.20⊕~u_tgany0_37.22⊕r2_33.24)
    
    13. ~id_35
              = ~id_35.25
        ~k_34 = ~k_34.26
        ~u_tgany0_37
              = ~u_tgany0_37.28
        hash_36
              = hash_36.29
        r2_33 = (~k_34.26⊕~u_tgany0_37.28⊕z.36)
        z     = (hash_36.29⊕rot_26(~id_35.25, hash_36.29))
        z.1   = z.36
    
    14. ~id_35
              = ~id_35.25
        ~k_34 = ~k_34.26
        ~u_tgany0_37
              = ~u_tgany0_37.28
        hash_36
              = zero
        r2_33 = (~k_34.26⊕~u_tgany0_37.28⊕z.36)
        z     = rot_26(~id_35.25, zero)
        z.1   = z.36
    
    15. ~id_35
              = ~id_35.85
        ~k_34 = ~k_34.86
        ~u_tgany0_37
              = ~u_tgany0_37.88
        hash_36
              = zero
        r2_33 = (~u_tgany0_37.88⊕x.168)
        z     = rot_26(~id_35.85, zero)
        z.1   = (~k_34.86⊕x.168)
    
    16. ~id_35
              = ~id_35.86
        ~k_34 = ~k_34.87
        ~u_tgany0_37
              = ~u_tgany0_37.89
        hash_36
              = hash_36.90
        r2_33 = (~u_tgany0_37.89⊕x.170)
        z     = (hash_36.90⊕rot_26(~id_35.86, hash_36.90))
        z.1   = (~k_34.87⊕x.170)
    
    17. ~id_35
              = ~id_35.87
        ~k_34 = ~k_34.88
        ~u_tgany0_37
              = ~u_tgany0_37.90
        hash_36
              = zero
        r2_33 = (~k_34.88⊕x.172)
        z     = rot_26(~id_35.87, zero)
        z.1   = (~u_tgany0_37.90⊕x.172)
    
    18. ~id_35
              = ~id_35.88
        ~k_34 = ~k_34.89
        ~u_tgany0_37
              = ~u_tgany0_37.91
        hash_36
              = hash_36.92
        r2_33 = (~k_34.89⊕x.174)
        z     = (hash_36.92⊕rot_26(~id_35.88, hash_36.92))
        z.1   = (~u_tgany0_37.91⊕x.174)
  */

rule (modulo E) TgRuletag_47_4to5:
   [ Fr( ~pid ) ] --> [ St( ~pid, 'tgk5' ), Cell( ~pid, 'pid', ~pid ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TgRuletag_47_5to6:
   [ St( ~pid, 'tgk5' ), In( r1_40 ), Fr( ~r2_39 ), !Tag_19( ~k_41, ~id_42 )
   ]
  --[
  Response_22( ~k_41, 'Tag' ), Challenge_20( ~r2_39, 'Tag' ),
  Running_24( <'R', 'T', (~k_41⊕~r2_39⊕r1_40)> )
  ]->
   [
   St( ~pid, 'tgk6' ), Cell( ~pid, 'k', ~k_41 ), Cell( ~pid, 'r1', r1_40 ),
   Cell( ~pid, 'r2', ~r2_39 ),
   Cell( ~pid, 'hash', h((~k_41⊕~r2_39⊕r1_40)) ),
   Out( <~r2_39, 
         lh_27((h((~k_41⊕~r2_39⊕r1_40))⊕rot_26(~id_42, h((~k_41⊕~r2_39⊕r1_40)))))>
   )
   ]

  /*
  rule (modulo AC) TgRuletag_47_5to6:
     [ St( ~pid, 'tgk5' ), In( r1_40 ), Fr( ~r2_39 ), !Tag_19( ~k_41, ~id_42 )
     ]
    --[
    Response_22( ~k_41, 'Tag' ), Challenge_20( ~r2_39, 'Tag' ),
    Running_24( <'R', 'T', z> )
    ]->
     [
     St( ~pid, 'tgk6' ), Cell( ~pid, 'k', ~k_41 ), Cell( ~pid, 'r1', r1_40 ),
     Cell( ~pid, 'r2', ~r2_39 ), Cell( ~pid, 'hash', h(z) ),
     Out( <~r2_39, lh_27((h(z)⊕rot_26(~id_42, h(z))))> )
     ]
    variants (modulo AC)
    1. ~k_41 = ~k_41.16
       ~r2_39
             = ~r2_39.18
       r1_40 = ~k_41.16
       z     = ~r2_39.18
    
    2. ~k_41 = ~k_41.16
       ~r2_39
             = ~r2_39.18
       r1_40 = ~r2_39.18
       z     = ~k_41.16
    
    3. ~k_41 = ~k_41.16
       ~r2_39
             = ~r2_39.18
       r1_40 = zero
       z     = (~k_41.16⊕~r2_39.18)
    
    4. ~k_41 = ~k_41.16
       ~r2_39
             = ~r2_39.18
       r1_40 = (~k_41.16⊕~r2_39.18)
       z     = zero
    
    5. ~k_41 = ~k_41.17
       ~r2_39
             = ~k_41.17
       r1_40 = r1_40.20
       z     = r1_40.20
    
    6. ~k_41 = ~k_41.17
       ~r2_39
             = ~r2_39.19
       r1_40 = r1_40.20
       z     = (~k_41.17⊕~r2_39.19⊕r1_40.20)
    
    7. ~k_41 = ~k_41.24
       ~r2_39
             = ~r2_39.26
       r1_40 = (~k_41.24⊕~r2_39.26⊕z.34)
       z     = z.34
    
    8. ~k_41 = ~k_41.321
       ~r2_39
             = ~r2_39.323
       r1_40 = (~r2_39.323⊕x.639)
       z     = (~k_41.321⊕x.639)
    
    9. ~k_41 = ~k_41.323
       ~r2_39
             = ~r2_39.325
       r1_40 = (~k_41.323⊕x.643)
       z     = (~r2_39.325⊕x.643)
  */

rule (modulo E) TgEndtag_47_6:
   [
   St( ~pid, 'tgk6' ), Cell( ~pid, 'hash', tgc_hash_0 ),
   Cell( ~pid, 'k', ~u_tgany1_45 ), Cell( ~pid, 'r1', tgc_r1_0 ),
   Cell( ~pid, 'r2', ~u_tgany2_44 ),
   In( rh_28((tgc_hash_0⊕rot_26(~u_id_46, tgc_hash_0))) ),
   !Tag_19( ~u_tgany1_45, ~u_id_46 )
   ]
  --[
  Alive_21( ~u_tgany1_45, 'Reader' ),
  Commit_25( <'T', 'R', (~u_tgany1_45⊕~u_tgany2_44⊕tgc_r1_0)> )
  ]->
   [ ]

  /*
  rule (modulo AC) TgEndtag_47_6:
     [
     St( ~pid, 'tgk6' ), Cell( ~pid, 'hash', tgc_hash_0 ),
     Cell( ~pid, 'k', ~u_tgany1_45 ), Cell( ~pid, 'r1', tgc_r1_0 ),
     Cell( ~pid, 'r2', ~u_tgany2_44 ), In( rh_28(z) ),
     !Tag_19( ~u_tgany1_45, ~u_id_46 )
     ]
    --[ Alive_21( ~u_tgany1_45, 'Reader' ), Commit_25( <'T', 'R', z.1> ) ]->
     [ ]
    variants (modulo AC)
     1. ~u_id_46
              = ~u_id_46.20
        ~u_tgany1_45
              = ~u_tgany1_45.21
        ~u_tgany2_44
              = ~u_tgany2_44.22
        tgc_hash_0
              = zero
        tgc_r1_0
              = ~u_tgany1_45.21
        z     = rot_26(~u_id_46.20, zero)
        z.1   = ~u_tgany2_44.22
    
     2. ~u_id_46
              = ~u_id_46.20
        ~u_tgany1_45
              = ~u_tgany1_45.21
        ~u_tgany2_44
              = ~u_tgany2_44.22
        tgc_hash_0
              = zero
        tgc_r1_0
              = ~u_tgany2_44.22
        z     = rot_26(~u_id_46.20, zero)
        z.1   = ~u_tgany1_45.21
    
     3. ~u_id_46
              = ~u_id_46.20
        ~u_tgany1_45
              = ~u_tgany1_45.21
        ~u_tgany2_44
              = ~u_tgany2_44.22
        tgc_hash_0
              = zero
        tgc_r1_0
              = zero
        z     = rot_26(~u_id_46.20, zero)
        z.1   = (~u_tgany1_45.21⊕~u_tgany2_44.22)
    
     4. ~u_id_46
              = ~u_id_46.20
        ~u_tgany1_45
              = ~u_tgany1_45.21
        ~u_tgany2_44
              = ~u_tgany2_44.22
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_45.21⊕~u_tgany2_44.22)
        z     = rot_26(~u_id_46.20, zero)
        z.1   = zero
    
     5. ~u_id_46
              = ~u_id_46.21
        ~u_tgany1_45
              = ~u_tgany1_45.22
        ~u_tgany2_44
              = ~u_tgany2_44.23
        tgc_hash_0
              = tgc_hash_0.24
        tgc_r1_0
              = ~u_tgany1_45.22
        z     = (tgc_hash_0.24⊕rot_26(~u_id_46.21, tgc_hash_0.24))
        z.1   = ~u_tgany2_44.23
    
     6. ~u_id_46
              = ~u_id_46.21
        ~u_tgany1_45
              = ~u_tgany1_45.22
        ~u_tgany2_44
              = ~u_tgany2_44.23
        tgc_hash_0
              = tgc_hash_0.24
        tgc_r1_0
              = ~u_tgany2_44.23
        z     = (tgc_hash_0.24⊕rot_26(~u_id_46.21, tgc_hash_0.24))
        z.1   = ~u_tgany1_45.22
    
     7. ~u_id_46
              = ~u_id_46.21
        ~u_tgany1_45
              = ~u_tgany1_45.22
        ~u_tgany2_44
              = ~u_tgany2_44.23
        tgc_hash_0
              = tgc_hash_0.24
        tgc_r1_0
              = zero
        z     = (tgc_hash_0.24⊕rot_26(~u_id_46.21, tgc_hash_0.24))
        z.1   = (~u_tgany1_45.22⊕~u_tgany2_44.23)
    
     8. ~u_id_46
              = ~u_id_46.21
        ~u_tgany1_45
              = ~u_tgany1_45.22
        ~u_tgany2_44
              = ~u_tgany2_44.23
        tgc_hash_0
              = tgc_hash_0.24
        tgc_r1_0
              = (~u_tgany1_45.22⊕~u_tgany2_44.23)
        z     = (tgc_hash_0.24⊕rot_26(~u_id_46.21, tgc_hash_0.24))
        z.1   = zero
    
     9. ~u_id_46
              = ~u_id_46.22
        ~u_tgany1_45
              = ~u_tgany1_45.23
        ~u_tgany2_44
              = ~u_tgany1_45.23
        tgc_hash_0
              = tgc_hash_0.25
        tgc_r1_0
              = tgc_r1_0.26
        z     = (tgc_hash_0.25⊕rot_26(~u_id_46.22, tgc_hash_0.25))
        z.1   = tgc_r1_0.26
    
    10. ~u_id_46
              = ~u_id_46.22
        ~u_tgany1_45
              = ~u_tgany1_45.23
        ~u_tgany2_44
              = ~u_tgany1_45.23
        tgc_hash_0
              = zero
        tgc_r1_0
              = tgc_r1_0.26
        z     = rot_26(~u_id_46.22, zero)
        z.1   = tgc_r1_0.26
    
    11. ~u_id_46
              = ~u_id_46.22
        ~u_tgany1_45
              = ~u_tgany1_45.23
        ~u_tgany2_44
              = ~u_tgany2_44.24
        tgc_hash_0
              = tgc_hash_0.25
        tgc_r1_0
              = tgc_r1_0.26
        z     = (tgc_hash_0.25⊕rot_26(~u_id_46.22, tgc_hash_0.25))
        z.1   = (~u_tgany1_45.23⊕~u_tgany2_44.24⊕tgc_r1_0.26)
    
    12. ~u_id_46
              = ~u_id_46.22
        ~u_tgany1_45
              = ~u_tgany1_45.23
        ~u_tgany2_44
              = ~u_tgany2_44.24
        tgc_hash_0
              = zero
        tgc_r1_0
              = tgc_r1_0.26
        z     = rot_26(~u_id_46.22, zero)
        z.1   = (~u_tgany1_45.23⊕~u_tgany2_44.24⊕tgc_r1_0.26)
    
    13. ~u_id_46
              = ~u_id_46.32
        ~u_tgany1_45
              = ~u_tgany1_45.33
        ~u_tgany2_44
              = ~u_tgany2_44.34
        tgc_hash_0
              = tgc_hash_0.35
        tgc_r1_0
              = (~u_tgany1_45.33⊕~u_tgany2_44.34⊕z.46)
        z     = (tgc_hash_0.35⊕rot_26(~u_id_46.32, tgc_hash_0.35))
        z.1   = z.46
    
    14. ~u_id_46
              = ~u_id_46.32
        ~u_tgany1_45
              = ~u_tgany1_45.33
        ~u_tgany2_44
              = ~u_tgany2_44.34
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_45.33⊕~u_tgany2_44.34⊕z.46)
        z     = rot_26(~u_id_46.32, zero)
        z.1   = z.46
    
    15. ~u_id_46
              = ~u_id_46.124
        ~u_tgany1_45
              = ~u_tgany1_45.125
        ~u_tgany2_44
              = ~u_tgany2_44.126
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany2_44.126⊕x.245)
        z     = rot_26(~u_id_46.124, zero)
        z.1   = (~u_tgany1_45.125⊕x.245)
    
    16. ~u_id_46
              = ~u_id_46.125
        ~u_tgany1_45
              = ~u_tgany1_45.126
        ~u_tgany2_44
              = ~u_tgany2_44.127
        tgc_hash_0
              = tgc_hash_0.128
        tgc_r1_0
              = (~u_tgany2_44.127⊕x.247)
        z     = (tgc_hash_0.128⊕rot_26(~u_id_46.125, tgc_hash_0.128))
        z.1   = (~u_tgany1_45.126⊕x.247)
    
    17. ~u_id_46
              = ~u_id_46.125
        ~u_tgany1_45
              = ~u_tgany1_45.126
        ~u_tgany2_44
              = ~u_tgany2_44.127
        tgc_hash_0
              = zero
        tgc_r1_0
              = (~u_tgany1_45.126⊕x.247)
        z     = rot_26(~u_id_46.125, zero)
        z.1   = (~u_tgany2_44.127⊕x.247)
    
    18. ~u_id_46
              = ~u_id_46.126
        ~u_tgany1_45
              = ~u_tgany1_45.127
        ~u_tgany2_44
              = ~u_tgany2_44.128
        tgc_hash_0
              = tgc_hash_0.129
        tgc_r1_0
              = (~u_tgany1_45.127⊕x.249)
        z     = (tgc_hash_0.129⊕rot_26(~u_id_46.126, tgc_hash_0.129))
        z.1   = (~u_tgany2_44.128⊕x.249)
  */

restriction equality:
  "∀ x_48 y_49 #i_50. (Eq_23( x_48, y_49 ) @ #i_50) ⇒ (x_48 = y_49)"
  // safety formula

lemma recentalive_tag:
  all-traces
  "∀ x_52 #i_53.
    (Alive_21( x_52, 'Tag' ) @ #i_53) ⇒
    (∃ y_54 #j_55 #k_56.
      (((Challenge_20( y_54, 'Reader' ) @ #k_56) ∧
        (Response_22( x_52, 'Tag' ) @ #j_55)) ∧
       (#k_56 < #j_55)) ∧
      (#j_55 < #i_53))"
/*
guarded formula characterizing all counter-examples:
"∃ x_52 #i_53.
  (Alive_21( x_52, 'Tag' ) @ #i_53)
 ∧
  ∀ y_54 #j_55 #k_56.
   (Challenge_20( y_54, 'Reader' ) @ #k_56) ∧
   (Response_22( x_52, 'Tag' ) @ #j_55)
  ⇒
   ((¬(#k_56 < #j_55)) ∨ (¬(#j_55 < #i_53)))"
*/
simplify
solve( Alive_21( x_52, 'Tag' ) @ #i_53 )
  case TgEndreader_38_3
  solve( St( ~pid, 'tgk3' ) ▶₀ #i_53 )
    case TgRulereader_38_2to3
    solve( Cell( ~pid, 'r1', ~u_tgany0_37 ) ▶₁ #i_53 )
      case TgRulereader_38_2to3
      solve( !Reader_18( ~k_34, ~id_35 ) ▶₂ #i_53 )
        case Setup_31
        solve( !KU( lh_27((h(z)⊕rot_26(~id_35, h(z)))) ) @ #vk.2 )
          case TgRuletag_47_5to6
          solve( splitEqs(0) )
            case split_case_7
            solve( !KU( (~r1_32⊕x) ) @ #vk.2 )
              case c_xor
              solve( splitEqs(1) )
                case split_case_1
                solve( !KU( ~r1_32 ) @ #vk.5 )
                  case TgRulereader_38_2to3
                  solve( !KU( ~r2_39 ) @ #vk.5 )
                    case TgRuletag_47_5to6
                    SOLVED // trace found
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma recentalive_reader:
  all-traces
  "∀ x_58 #i_59.
    (Alive_21( x_58, 'Reader' ) @ #i_59) ⇒
    (∃ y_60 #j_61 #k_62.
      (((Challenge_20( y_60, 'Tag' ) @ #k_62) ∧
        (Response_22( x_58, 'Reader' ) @ #j_61)) ∧
       (#k_62 < #j_61)) ∧
      (#j_61 < #i_59))"
/*
guarded formula characterizing all counter-examples:
"∃ x_58 #i_59.
  (Alive_21( x_58, 'Reader' ) @ #i_59)
 ∧
  ∀ y_60 #j_61 #k_62.
   (Challenge_20( y_60, 'Tag' ) @ #k_62) ∧
   (Response_22( x_58, 'Reader' ) @ #j_61)
  ⇒
   ((¬(#k_62 < #j_61)) ∨ (¬(#j_61 < #i_59)))"
*/
by sorry

lemma noninjectiveagreement_tag:
  all-traces
  "∀ t_64 #i_65.
    (Commit_25( <'T', 'R', t_64> ) @ #i_65) ⇒
    (∃ #j_66. Running_24( <'T', 'R', t_64> ) @ #j_66)"
/*
guarded formula characterizing all counter-examples:
"∃ t_64 #i_65.
  (Commit_25( <'T', 'R', t_64> ) @ #i_65)
 ∧
  ∀ #j_66. (Running_24( <'T', 'R', t_64> ) @ #j_66) ⇒ ⊥"
*/
by sorry

lemma noninjectiveagreement_reader:
  all-traces
  "∀ t_68 #i_69.
    (Commit_25( <'R', 'T', t_68> ) @ #i_69) ⇒
    (∃ #j_70. Running_24( <'R', 'T', t_68> ) @ #j_70)"
/*
guarded formula characterizing all counter-examples:
"∃ t_68 #i_69.
  (Commit_25( <'R', 'T', t_68> ) @ #i_69)
 ∧
  ∀ #j_70. (Running_24( <'R', 'T', t_68> ) @ #j_70) ⇒ ⊥"
*/
by sorry

lemma executable:
  exists-trace
  "∃ x_72 #i_73 #j_74.
    ((Alive_21( x_72, 'Reader' ) @ #i_73) ∧
     (Response_22( x_72, 'Tag' ) @ #j_74)) ∧
    (¬(∃ #k_75. (Response_22( x_72, 'Tag' ) @ #k_75) ∧ (¬(#j_74 = #k_75))))"
/*
guarded formula characterizing all satisfying traces:
"∃ x_72 #i_73 #j_74.
  (Alive_21( x_72, 'Reader' ) @ #i_73) ∧
  (Response_22( x_72, 'Tag' ) @ #j_74)
 ∧
  ∀ #k_75. (Response_22( x_72, 'Tag' ) @ #k_75) ⇒ #j_74 = #k_75"
*/
by sorry

/* All well-formedness checks were successful. */

end