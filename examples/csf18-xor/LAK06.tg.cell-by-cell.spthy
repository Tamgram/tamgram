theory LAK06
begin

builtins: xor, hashing

rule setup_26:
    [ Fr(~k_25)
    ]
  --[ OnlyOnce_18('setup')
    , Create_23(~k_25)
    ]->
    [ !Reader_19(~k_25)
    , !Tag_20(~k_25)
    ]

rule TgRulereader_32_1to2:
    [ Fr(~pid)
    ]
  --[ 
    ]->
    [ St(~pid, 'tgk2')
    , Cell(~pid, 'pid', ~pid)
    ]

rule TgRulereader_32_2to3:
    [ St(~pid, 'tgk2')
    , !Reader_19(~k_28)
    , Fr(~r0_27)
    ]
  --[ OnlyOnce_18('initiareader')
    ]->
    [ St(~pid, 'tgk3')
    , Cell(~pid, 'k', ~k_28)
    , Cell(~pid, 'r0', ~r0_27)
    , Out(~r0_27)
    ]

rule TgEndreader_32_3:
    [ St(~pid, 'tgk3')
    , Cell(~pid, 'k', ~u_tgany0_31)
    , Cell(~pid, 'r0', ~u_tgany1_30)
    , In(<r1_29, h(((((~u_tgany1_30) XOR (r1_29))) XOR (~u_tgany0_31)))>)
    ]
  --[ Commit_21(<'R', 'T', <~u_tgany0_31, ~u_tgany1_30, r1_29>>)
    , Running_24(<'T', 'R', <~u_tgany0_31, ~u_tgany1_30, r1_29>>)
    ]->
    [ Out(h(((((h(((((~u_tgany1_30) XOR (r1_29))) XOR (~u_tgany0_31)))) XOR (~u_tgany0_31))) XOR (~u_tgany1_30))))
    ]

rule TgRuletag_38_4to5:
    [ Fr(~pid)
    ]
  --[ 
    ]->
    [ St(~pid, 'tgk5')
    , Cell(~pid, 'pid', ~pid)
    ]

rule TgRuletag_38_5to6:
    [ St(~pid, 'tgk5')
    , !Tag_20(~k_35)
    , Fr(~r1_33)
    , In(r0_34)
    ]
  --[ Running_24(<'R', 'T', <~k_35, r0_34, ~r1_33>>)
    ]->
    [ St(~pid, 'tgk6')
    , Cell(~pid, 'k', ~k_35)
    , Cell(~pid, 'r0', r0_34)
    , Cell(~pid, 'r1', ~r1_33)
    , Out(<~r1_33, h(((((r0_34) XOR (~r1_33))) XOR (~k_35)))>)
    ]

rule TgEndtag_38_6:
    [ St(~pid, 'tgk6')
    , Cell(~pid, 'k', ~u_tgany2_37)
    , Cell(~pid, 'r0', tgc_r0_0)
    , Cell(~pid, 'r1', ~u_tgany3_36)
    , In(h(((((h(((((tgc_r0_0) XOR (~u_tgany3_36))) XOR (~u_tgany2_37)))) XOR (~u_tgany2_37))) XOR (tgc_r0_0))))
    ]
  --[ Commit_21(<'T', 'R', <~u_tgany2_37, tgc_r0_0, ~u_tgany3_36>>)
    , FinTag_22()
    ]->
    [ 
    ]

lemma executable []:
  exists-trace
  "((Ex #i_39 .
       FinTag_22() @ #i_39) & (All x_40 #i1_41 #i2_42 .
                                 ((((OnlyOnce_18(x_40) @ #i1_41) & (OnlyOnce_18(
                                 x_40) @ #i2_42))) ==> (#i1_41 = #i2_42))))"

lemma helpingSecrecy [reuse]:
  all-traces
  "All k_44 #i_45 .
     ((Create_23(k_44) @ #i_45) ==> (not Ex #j_46 .
                                           K(k_44) @ #j_46))"

lemma noninjectiveagreementTAG [use_induction]:
  all-traces
  "All t_48 #i_49 .
     ((Commit_21(<'T', 'R', t_48>) @ #i_49) ==> (Ex #j_50 .
                                                   Running_24(<'T', 'R', t_48>) @ #j_50))"

lemma noninjectiveagreementREADER [use_induction]:
  all-traces
  "All t_52 #i_53 .
     ((Commit_21(<'R', 'T', t_52>) @ #i_53) ==> (Ex #j_54 .
                                                   Running_24(<'R', 'T', t_52>) @ #j_54))"

end

