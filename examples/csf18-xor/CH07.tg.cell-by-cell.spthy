theory CH07
begin

builtins: xor, hashing

functions: rot_28/2

functions: lh_29/1

functions: rh_30/1

rule Setup_33:
    [ Fr(~k_31)
    , Fr(~id_32)
    ]
  --[ 
    ]->
    [ !Reader_20(~k_31, ~id_32)
    , !Tag_21(~k_31, ~id_32)
    ]

rule TgRulereader_40_1to2:
    [ Fr(~pid)
    ]
  --[ 
    ]->
    [ St(~pid, 'tgk2')
    , Cell(~pid, 'pid', ~pid)
    ]

rule TgRulereader_40_2to3:
    [ St(~pid, 'tgk2')
    , Fr(~r1_34)
    ]
  --[ Challenge_22(~r1_34, 'Reader')
    ]->
    [ St(~pid, 'tgk3')
    , Cell(~pid, 'r1', ~r1_34)
    , Out(~r1_34)
    ]

rule TgEndreader_40_3:
    [ St(~pid, 'tgk3')
    , Cell(~pid, 'r1', ~u_tgany0_39)
    , !Reader_20(~k_36, ~id_37)
    , In(<r2_35, lh_29(((rot_28(~id_37, hash_38)) XOR (hash_38)))>)
    ]
  --[ Alive_23(~k_36, 'Tag')
    , Response_24(~k_36, 'Reader')
    , Eq_25(h(((((~u_tgany0_39) XOR (r2_35))) XOR (~k_36))), hash_38)
    , Running_26(<'T', 'R', <((((~k_36) XOR (~u_tgany0_39))) XOR (r2_35))>>)
    , Commit_27(<'R', 'T', <((((~k_36) XOR (~u_tgany0_39))) XOR (r2_35))>>)
    ]->
    [ Out(rh_30(((rot_28(~id_37, hash_38)) XOR (hash_38))))
    ]

rule TgRuletag_49_4to5:
    [ Fr(~pid)
    ]
  --[ 
    ]->
    [ St(~pid, 'tgk5')
    , Cell(~pid, 'pid', ~pid)
    ]

rule TgRuletag_49_5to6:
    [ St(~pid, 'tgk5')
    , In(r1_42)
    , Fr(~r2_41)
    , !Tag_21(~k_43, ~id_44)
    ]
  --[ Response_24(~k_43, 'Tag')
    , Challenge_22(~r2_41, 'Tag')
    , Running_26(<'R', 'T', <((((~k_43) XOR (r1_42))) XOR (~r2_41))>>)
    ]->
    [ St(~pid, 'tgk6')
    , Cell(~pid, 'k', ~k_43)
    , Cell(~pid, 'r1', r1_42)
    , Cell(~pid, 'r2', ~r2_41)
    , Cell(~pid, 'hash', h(((((r1_42) XOR (~r2_41))) XOR (~k_43))))
    , Out(<~r2_41, lh_29(((rot_28(~id_44, h(((((r1_42) XOR (~r2_41))) XOR (~k_43))))) XOR (h(((((r1_42) XOR (~r2_41))) XOR (~k_43))))))>)
    ]

rule TgEndtag_49_6:
    [ St(~pid, 'tgk6')
    , Cell(~pid, 'hash', tgc_hash_0)
    , Cell(~pid, 'k', ~u_tgany1_47)
    , Cell(~pid, 'r1', tgc_r1_0)
    , Cell(~pid, 'r2', ~u_tgany2_46)
    , In(rh_30(((rot_28(~u_id_48, tgc_hash_0)) XOR (tgc_hash_0))))
    , !Tag_21(~u_tgany1_47, ~u_id_48)
    ]
  --[ Alive_23(~u_tgany1_47, 'Reader')
    , Commit_27(<'T', 'R', <((((~u_tgany1_47) XOR (tgc_r1_0))) XOR (~u_tgany2_46))>>)
    ]->
    [ 
    ]

restriction equality:
  "All x_50 y_51 #i_52 .
     ((Eq_25(x_50, y_51) @ #i_52) ==> (((x_50) = (y_51))))"

lemma recentalive_tag []:
  all-traces
  "All x_54 #i_55 .
     ((Alive_23(x_54, 'Tag') @ #i_55) ==> (Ex y_56 #j_57 #k_58 .
                                             ((((((Challenge_22(y_56, 'Reader') @ #k_58) & (Response_24(
                                             x_54, 'Tag') @ #j_57))) & (#k_58 < #j_57))) & (#j_57 < #i_55))))"

lemma recentalive_reader []:
  all-traces
  "All x_60 #i_61 .
     ((Alive_23(x_60, 'Reader') @ #i_61) ==> (Ex y_62 #j_63 #k_64 .
                                                ((((((Challenge_22(y_62, 'Tag') @ #k_64) & (Response_24(
                                                x_60, 'Reader') @ #j_63))) & (#k_64 < #j_63))) & (#j_63 < #i_61))))"

lemma noninjectiveagreement_tag []:
  all-traces
  "All t_66 #i_67 .
     ((Commit_27(<'T', 'R', t_66>) @ #i_67) ==> (Ex #j_68 .
                                                   Running_26(<'T', 'R', t_66>) @ #j_68))"

lemma noninjectiveagreement_reader []:
  all-traces
  "All t_70 #i_71 .
     ((Commit_27(<'R', 'T', t_70>) @ #i_71) ==> (Ex #j_72 .
                                                   Running_26(<'R', 'T', t_70>) @ #j_72))"

lemma executable []:
  exists-trace
  "Ex x_74 #i_75 #j_76 .
     ((((Alive_23(x_74, 'Reader') @ #i_75) & (Response_24(x_74, 'Tag') @ #j_76))) & (not 
     Ex #k_77 .
       ((Response_24(x_74, 'Tag') @ #k_77) & (not #j_76 = #k_77))))"

end

