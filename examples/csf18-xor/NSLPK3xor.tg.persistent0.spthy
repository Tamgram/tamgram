theory NSLPK3xor
begin

builtins: asymmetric-encryption, xor

restriction pcell_restriction:
  "All pid pcellptr cell #i #j .
     ((((PcellRead(pid, pcellptr, cell) @ #i) & (PcellFreed(pid, pcellptr, cell) @ #j))) ==> (#i < #j))"

rule Register_pk_24:
    [ Fr(~ltkA_23)
    ]
  --[ Register_22($A)
    ]->
    [ !Ltk_20($A, ~ltkA_23)
    , !Pk_21($A, pk(~ltkA_23))
    , Out(pk(~ltkA_23))
    ]

rule Reveal_ltk_28:
  [!Ltk_20(A_27, ltkA_26)]--[RevLtk_25(A_27)]->[Out(ltkA_26)]

rule TgRuleI_43_2to3:
    [ Fr(~pcellptr_new)
    , Fr(~pid)
    ]
  --[ 
    ]->
    [ St(~pid, 'tgk3')
    , !Pcell(~pid, ~pcellptr_new, 'I', 'NULL')
    , !Pcell(~pid, ~pcellptr_new, 'R', 'NULL')
    , !Pcell(~pid, ~pcellptr_new, 'ni', 'NULL')
    ]

rule TgRuleI_43_3to4:
    [ St(~pid, 'tgk3')
    , Fr(~pcellptr_new)
    , !Pcell(~pid, ~pcellptr_I, 'I', 'NULL')
    , !Pcell(~pid, ~pcellptr_R, 'R', 'NULL')
    , !Pcell(~pid, ~pcellptr_ni, 'ni', 'NULL')
    , Fr(~ni_35)
    , !Pk_21($R, pkR_34)
    ]
  --[ PcellFreed(~pid, ~pcellptr_I, 'I')
    , PcellFreed(~pid, ~pcellptr_R, 'R')
    , PcellFreed(~pid, ~pcellptr_ni, 'ni')
    , OUT_I_1_32(aenc(<'1', ~ni_35, $I>, pkR_34))
    ]->
    [ St(~pid, 'tgk4')
    , !Pcell(~pid, ~pcellptr_new, 'ni', ~ni_35)
    , !Pcell(~pid, ~pcellptr_new, 'I', $I)
    , !Pcell(~pid, ~pcellptr_new, 'R', $R)
    , Out(aenc(<'1', ~ni_35, $I>, pkR_34))
    ]

rule TgEndI_43_4:
    [ St(~pid, 'tgk4')
    , !Pcell(~pid, ~pcellptr_I, 'I', tgc_I_0)
    , !Pcell(~pid, ~pcellptr_R, 'R', tgc_R_0)
    , !Pcell(~pid, ~pcellptr_ni, 'ni', tgc_ni_0)
    , !Ltk_20(tgc_I_0, ltkI_39)
    , In(aenc(<'2', tgc_ni_0, x_37>, pk(ltkI_39)))
    , !Pk_21(tgc_R_0, pkR_38)
    ]
  --[ PcellRead(~pid, ~pcellptr_I, 'I')
    , PcellRead(~pid, ~pcellptr_R, 'R')
    , PcellRead(~pid, ~pcellptr_ni, 'ni')
    , IN_I_2_nr_33(((x_37) XOR (tgc_R_0)), aenc(<'2', tgc_ni_0, x_37>, pk(ltkI_39)))
    , Commit_29(tgc_I_0, tgc_R_0, <'init', tgc_ni_0, ((x_37) XOR (tgc_R_0))>)
    , Running_30(tgc_R_0, tgc_I_0, <'resp', tgc_ni_0, ((x_37) XOR (tgc_R_0))>)
    ]->
    [ Out(aenc(<'3', ((x_37) XOR (tgc_R_0))>, pkR_38))
    , Secret_31(tgc_I_0, tgc_R_0, ((x_37) XOR (tgc_R_0)))
    , Secret_31(tgc_I_0, tgc_R_0, tgc_ni_0)
    ]

rule TgRuleR_54_5to6:
    [ Fr(~pcellptr_new)
    , Fr(~pid)
    ]
  --[ 
    ]->
    [ St(~pid, 'tgk6')
    , !Pcell(~pid, ~pcellptr_new, 'I', 'NULL')
    , !Pcell(~pid, ~pcellptr_new, 'R', 'NULL')
    , !Pcell(~pid, ~pcellptr_new, 'ni', 'NULL')
    , !Pcell(~pid, ~pcellptr_new, 'nr', 'NULL')
    ]

rule TgRuleR_54_6to7:
    [ St(~pid, 'tgk6')
    , Fr(~pcellptr_new)
    , !Pcell(~pid, ~pcellptr_I, 'I', 'NULL')
    , !Pcell(~pid, ~pcellptr_R, 'R', 'NULL')
    , !Pcell(~pid, ~pcellptr_ni, 'ni', 'NULL')
    , !Pcell(~pid, ~pcellptr_nr, 'nr', 'NULL')
    , !Ltk_20($R, ltkR_49)
    , In(aenc(<'1', ni_48, I_50>, pk(ltkR_49)))
    , !Pk_21(I_50, pkI_46)
    , Fr(~nr_47)
    ]
  --[ PcellFreed(~pid, ~pcellptr_I, 'I')
    , PcellFreed(~pid, ~pcellptr_R, 'R')
    , PcellFreed(~pid, ~pcellptr_ni, 'ni')
    , PcellFreed(~pid, ~pcellptr_nr, 'nr')
    , IN_R_1_ni_44(ni_48, aenc(<'1', ni_48, I_50>, pk(ltkR_49)))
    , OUT_R_1_45(aenc(<'2', ni_48, ((~nr_47) XOR ($R))>, pkI_46))
    , Running_30(I_50, $R, <'init', ni_48, ~nr_47>)
    ]->
    [ St(~pid, 'tgk7')
    , !Pcell(~pid, ~pcellptr_new, 'R', $R)
    , !Pcell(~pid, ~pcellptr_new, 'I', I_50)
    , !Pcell(~pid, ~pcellptr_new, 'ni', ni_48)
    , !Pcell(~pid, ~pcellptr_new, 'nr', ~nr_47)
    , Out(aenc(<'2', ni_48, ((~nr_47) XOR ($R))>, pkI_46))
    ]

rule TgEndR_54_7:
    [ St(~pid, 'tgk7')
    , !Pcell(~pid, ~pcellptr_I, 'I', tgc_I_0)
    , !Pcell(~pid, ~pcellptr_R, 'R', tgc_R_0)
    , !Pcell(~pid, ~pcellptr_ni, 'ni', tgc_ni_0)
    , !Pcell(~pid, ~pcellptr_nr, 'nr', tgc_nr_0)
    , !Ltk_20(tgc_R_0, ltkR_53)
    , In(aenc(<'3', tgc_nr_0>, pk(ltkR_53)))
    ]
  --[ PcellRead(~pid, ~pcellptr_I, 'I')
    , PcellRead(~pid, ~pcellptr_R, 'R')
    , PcellRead(~pid, ~pcellptr_ni, 'ni')
    , PcellRead(~pid, ~pcellptr_nr, 'nr')
    , Commit_29(tgc_R_0, tgc_I_0, <'resp', tgc_ni_0, tgc_nr_0>)
    ]->
    [ Secret_31(tgc_R_0, tgc_I_0, tgc_nr_0)
    , Secret_31(tgc_R_0, tgc_I_0, tgc_ni_0)
    ]

rule Secrecy_claim_59:
  [Secret_31(A_58, B_57, m_56)]--[Secret_55(A_58, B_57, m_56)]->[]

lemma types [sources]:
  all-traces
  "((All ni_60 m1_61 #i_62 .
       ((IN_R_1_ni_44(ni_60, m1_61) @ #i_62) ==> (((Ex #j_63 .
                                                      ((!KU(ni_60) @ #j_63) & (#j_63 < #i_62))) | (
       Ex #j_64 .
         OUT_I_1_32(m1_61) @ #j_64))))) & (All nr_65 m2_66 #i_67 .
                                             ((IN_I_2_nr_33(nr_65, m2_66) @ #i_67) ==> (((
                                             Ex #j_68 .
                                               ((!KU(nr_65) @ #j_68) & (#j_68 < #i_67))) | (
                                             Ex #j_69 .
                                               OUT_R_1_45(m2_66) @ #j_69))))))"

restriction onekeypername:
  "not Ex A_71 #i_72 #j_73 .
         ((((Register_22(A_71) @ #i_72) & (Register_22(A_71) @ #j_73))) & (not #i_72 = #j_73))"

lemma nonce_secrecy []:
  all-traces
  "not Ex A_75 B_76 s_77 #i_78 .
         ((((((Secret_55(A_75, B_76, s_77) @ #i_78) & (Ex #j_79 .
                                                         K(s_77) @ #j_79))) & (not 
         Ex #r_80 .
           RevLtk_25(A_75) @ #r_80))) & (not Ex #r_81 .
                                               RevLtk_25(B_76) @ #r_81))"

lemma injective_agree []:
  all-traces
  "All actor_83 peer_84 params_85 #i_86 .
     ((Commit_29(actor_83, peer_84, params_85) @ #i_86) ==> (((((Ex #j_87 .
                                                                   ((((Running_30(
                                                                   actor_83, peer_84, params_85) @ #j_87) & (#j_87 < #i_86))) & (not 
                                                                   Ex 
                                                                   actor2_88 peer2_89 #i2_90 .
                                                                     
                                                                   ((Commit_29(
                                                                   actor2_88, peer2_89, params_85) @ #i2_90) & (not #i_86 = #i2_90))))) | (
     Ex #r_91 .
       RevLtk_25(actor_83) @ #r_91))) | (Ex #r_92 .
                                           RevLtk_25(peer_84) @ #r_92))))"

lemma session_key_setup_possible []:
  exists-trace
  "Ex A_94 B_95 s_96 #i_97 .
     ((((Secret_55(A_94, B_95, s_96) @ #i_97) & (not Ex #r_98 .
                                                       RevLtk_25(A_94) @ #r_98))) & (not 
     Ex #r_99 .
       RevLtk_25(B_95) @ #r_99))"

end

