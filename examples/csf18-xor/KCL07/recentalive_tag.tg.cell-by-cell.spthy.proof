theory KCL07 begin

// Function signature and definition of the equational theory E

builtins: xor
functions: fst/1, h/1, pair/2, snd/1
equations: fst(<x.1, x.2>) = x.1, snd(<x.1, x.2>) = x.2



/* looping facts with injective instances: St/2 */

rule (modulo E) Setup_23:
   [ Fr( ~k_21 ), Fr( ~id_22 ) ]
  --[ OnlyOnce_18( ) ]->
   [ !Reader_19( ~k_21, ~id_22 ), !Tag_20( ~k_21, ~id_22 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TgRulereader_32_1to2:
   [ Fr( ~pid ) ] --> [ St( ~pid, 'tgk2' ), Cell( ~pid, 'pid', ~pid ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TgRulereader_32_2to3:
   [ St( ~pid, 'tgk2' ), Fr( ~r1_27 ) ]
  --[ Challenge_24( ~r1_27, 'Reader' ) ]->
   [ St( ~pid, 'tgk3' ), Cell( ~pid, 'r1', ~r1_27 ), Out( ~r1_27 ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TgEndreader_32_3:
   [
   St( ~pid, 'tgk3' ), Cell( ~pid, 'r1', ~u_tgany0_31 ),
   !Reader_19( ~k_29, ~id_30 ), In( xoredhash_28 )
   ]
  --[
  Alive_25( ~k_29, 'Tag' ),
  Eq_26( xoredhash_28, (~id_30⊕h(<~u_tgany0_31, ~k_29>)) )
  ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) tag_38:
   [ In( r1_35 ), Fr( ~r2_34 ), !Tag_20( ~k_36, ~id_37 ) ]
  --[ Response_33( ~k_36, 'Tag' ) ]->
   [ Out( <(~id_37⊕~r2_34), (~r2_34⊕h(<r1_35, ~k_36>))> ) ]

  /*
  rule (modulo AC) tag_38:
     [ In( r1_35 ), Fr( ~r2_34 ), !Tag_20( ~k_36, ~id_37 ) ]
    --[ Response_33( ~k_36, 'Tag' ) ]->
     [ Out( <z, (~r2_34⊕h(<r1_35, ~k_36>))> ) ]
    variants (modulo AC)
    1. ~id_37
             = ~id_37.17
       ~r2_34
             = ~id_37.17
       z     = zero
    
    2. ~id_37
             = ~id_37.17
       ~r2_34
             = ~r2_34.19
       z     = (~id_37.17⊕~r2_34.19)
  */

restriction equality:
  "∀ x_39 y_40 #i_41. (Eq_26( x_39, y_40 ) @ #i_41) ⇒ (x_39 = y_40)"
  // safety formula

restriction unique:
  "∀ #i_43 #j_44.
    ((OnlyOnce_18( ) @ #i_43) ∧ (OnlyOnce_18( ) @ #j_44)) ⇒ (#i_43 = #j_44)"
  // safety formula

lemma recentalive_tag:
  all-traces
  "∀ x_46 #i_47.
    (Alive_25( x_46, 'Tag' ) @ #i_47) ⇒
    (∃ y_48 #j_49 #k_50.
      (((Challenge_24( y_48, 'Reader' ) @ #k_50) ∧
        (Response_33( x_46, 'Tag' ) @ #j_49)) ∧
       (#k_50 < #j_49)) ∧
      (#j_49 < #i_47))"
/*
guarded formula characterizing all counter-examples:
"∃ x_46 #i_47.
  (Alive_25( x_46, 'Tag' ) @ #i_47)
 ∧
  ∀ y_48 #j_49 #k_50.
   (Challenge_24( y_48, 'Reader' ) @ #k_50) ∧
   (Response_33( x_46, 'Tag' ) @ #j_49)
  ⇒
   ((¬(#k_50 < #j_49)) ∨ (¬(#j_49 < #i_47)))"
*/
simplify
solve( St( ~pid, 'tgk3' ) ▶₀ #i_47 )
  case TgRulereader_32_2to3
  solve( Cell( ~pid, 'r1', ~u_tgany0_31 ) ▶₁ #i_47 )
    case TgRulereader_32_2to3
    solve( !Reader_19( ~k_29, ~id_30 ) ▶₂ #i_47 )
      case Setup_23
      solve( !KU( (~id_30⊕h(<~r1_27, ~k_29>)) ) @ #vk )
        case c_xor
        solve( !KU( ~id_30 ) @ #vk.2 )
          case tag_38
          solve( !KU( ~r2_34 ) @ #vk.4 )
            case tag_38_case_1
            by contradiction /* cyclic */
          next
            case tag_38_case_2
            solve( !KU( h(<~r1_27, ~k_29>) ) @ #vk.3 )
              case c_h
              by solve( !KU( ~k_29 ) @ #vk.8 )
            next
              case tag_38
              solve( !KU( ~r1_27 ) @ #vk.6 )
                case TgRulereader_32_2to3
                by contradiction /* cyclic */
              qed
            qed
          qed
        qed
      next
        case coerce
        solve( !KD( (~id_30⊕h(<~r1_27, ~k_29>)) ) ▶₀ #vk )
          case TgRulereader_32_2to3
          by contradiction /* impossible chain */
        next
          case tag_38
          solve( (#vl, 0) ~~> (#vk, 0) )
            case d_0_fst
            solve( !Tag_20( ~k_36, ~id_37 ) ▶₂ #vr.3 )
              case Setup_23
              solve( splitEqs(1) )
                case split
                solve( (#vr.4, 0) ~~> (#vk, 0) )
                  case d_xor_case_1
                  solve( (#vr.5, 0) ~~> (#vk, 0) )
                    case Xor
                    solve( !KU( (~r2_34⊕h(<~r1_27, ~k_29>)) ) @ #vk.2 )
                      case c_xor
                      solve( !KU( ~r2_34 ) @ #vk.4 )
                        case tag_38_case_1
                        solve( !KU( ~id_30 ) @ #vk.5 )
                          case tag_38
                          solve( !KU( ~r2_34.1 ) @ #vk.7 )
                            case tag_38_case_1
                            by contradiction /* cyclic */
                          next
                            case tag_38_case_2
                            solve( !KU( h(<~r1_27, ~k_29>) ) @ #vk.6 )
                              case c_h
                              by solve( !KU( ~k_29 ) @ #vk.11 )
                            next
                              case tag_38
                              solve( !KU( ~r1_27 ) @ #vk.9 )
                                case TgRulereader_32_2to3
                                by contradiction /* cyclic */
                              qed
                            qed
                          qed
                        qed
                      next
                        case tag_38_case_2
                        solve( !KU( h(<~r1_27, ~k_29>) ) @ #vk.4 )
                          case c_h
                          by solve( !KU( ~k_29 ) @ #vk.8 )
                        next
                          case tag_38
                          solve( !KU( ~r1_27 ) @ #vk.6 )
                            case TgRulereader_32_2to3
                            by contradiction /* cyclic */
                          qed
                        qed
                      qed
                    next
                      case coerce
                      solve( !KD( (~r2_34⊕h(<~r1_27, ~k_29>)) ) ▶₀ #vk.1 )
                        case TgRulereader_32_2to3
                        by contradiction /* impossible chain */
                      next
                        case tag_38
                        solve( (#vl.1, 0) ~~> (#vk.1, 0) )
                          case d_0_fst
                          solve( !Tag_20( ~k_36, ~id_37 ) ▶₂ #vr.6 )
                            case Setup_23
                            solve( splitEqs(7) )
                              case split
                              solve( (#vr.7, 0) ~~> (#vk.1, 0) )
                                case d_xor_case_1
                                by solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                              next
                                case d_xor_case_2
                                solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                                  case Xor
                                  by contradiction /* cyclic */
                                qed
                              next
                                case d_xor_case_3
                                by contradiction /* impossible chain */
                              next
                                case d_xor_case_4
                                by contradiction /* impossible chain */
                              qed
                            qed
                          qed
                        next
                          case d_0_snd
                          solve( (#vr.7, 0) ~~> (#vk.1, 0) )
                            case Xor
                            solve( !KU( ~r1_27 ) @ #vk.2 )
                              case TgRulereader_32_2to3
                              by contradiction /* cyclic */
                            qed
                          next
                            case d_xor_case_1
                            solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                              case Xor
                              solve( !KU( (h(<~r1_27, ~k_36>)⊕h(<r1_35, ~k_36>)) ) @ #vk.3 )
                                case c_xor
                                solve( !KU( h(<r1_35, ~k_36>) ) @ #vk.4 )
                                  case c_h
                                  by solve( !KU( ~k_36 ) @ #vk.7 )
                                next
                                  case tag_38
                                  solve( !KU( ~r2_34.1 ) @ #vk.6 )
                                    case tag_38_case_1
                                    solve( !KU( ~id_30 ) @ #vk.7 )
                                      case tag_38
                                      solve( !KU( ~r2_34.2 ) @ #vk.9 )
                                        case tag_38_case_1
                                        by contradiction /* cyclic */
                                      next
                                        case tag_38_case_2
                                        solve( !KU( h(<~r1_27, ~k_36>) ) @ #vk.8 )
                                          case c_h
                                          by solve( !KU( ~k_36 ) @ #vk.13 )
                                        next
                                          case tag_38
                                          solve( !KU( ~r1_27 ) @ #vk.11 )
                                            case TgRulereader_32_2to3
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    qed
                                  next
                                    case tag_38_case_2
                                    by contradiction /* cyclic */
                                  qed
                                qed
                              next
                                case coerce
                                solve( !KD( (h(<~r1_27, ~k_36>)⊕h(<r1_35, ~k_36>)) ) ▶₀ #vk.2 )
                                  case TgRulereader_32_2to3
                                  by contradiction /* impossible chain */
                                next
                                  case tag_38
                                  solve( (#vl.1, 0) ~~> (#vk.2, 0) )
                                    case d_0_fst
                                    solve( !Tag_20( ~k_36.1, ~id_37 ) ▶₂ #vr.8 )
                                      case Setup_23
                                      solve( splitEqs(12) )
                                        case split
                                        solve( (#vr.9, 0) ~~> (#vk.2, 0) )
                                          case d_xor_case_1
                                          by solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                                        next
                                          case d_xor_case_2
                                          by solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                                        next
                                          case d_xor_case_3
                                          by contradiction /* impossible chain */
                                        next
                                          case d_xor_case_4
                                          by contradiction /* impossible chain */
                                        qed
                                      qed
                                    qed
                                  next
                                    case d_0_snd
                                    solve( (#vr.9, 0) ~~> (#vk.2, 0) )
                                      case d_xor_case_1
                                      by solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                                    next
                                      case d_xor_case_2
                                      solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                                        case Xor_case_1
                                        solve( !Tag_20( ~k_36, ~id_37 ) ▶₂ #vr.8 )
                                          case Setup_23
                                          solve( splitEqs(12) )
                                            case split
                                            solve( !KU( (~r2_34.1⊕h(<~r1_27, ~k_36>)) ) @ #vk.4 )
                                              case c_xor
                                              solve( !KU( ~r2_34.1 ) @ #vk.6 )
                                                case tag_38_case_1
                                                solve( !KU( ~id_30 ) @ #vk.7 )
                                                  case tag_38
                                                  solve( !KU( ~r2_34.2 ) @ #vk.9 )
                                                    case tag_38_case_1
                                                    by contradiction /* cyclic */
                                                  next
                                                    case tag_38_case_2
                                                    solve( !KU( h(<~r1_27, ~k_36>) ) @ #vk.8 )
                                                      case c_h
                                                      by solve( !KU( ~k_36 ) @ #vk.13 )
                                                    next
                                                      case tag_38
                                                      solve( !KU( ~r1_27 ) @ #vk.11 )
                                                        case TgRulereader_32_2to3
                                                        by contradiction /* cyclic */
                                                      qed
                                                    qed
                                                  qed
                                                qed
                                              next
                                                case tag_38_case_2
                                                solve( !KU( h(<~r1_27, ~k_36>) ) @ #vk.6 )
                                                  case c_h
                                                  by solve( !KU( ~k_36 ) @ #vk.10 )
                                                next
                                                  case tag_38
                                                  solve( !KU( ~r1_27 ) @ #vk.8 )
                                                    case TgRulereader_32_2to3
                                                    by contradiction /* cyclic */
                                                  qed
                                                qed
                                              qed
                                            next
                                              case coerce
                                              solve( !KD( (~r2_34.1⊕h(<~r1_27, ~k_36>)) ) ▶₀ #vk.3 )
                                                case TgRulereader_32_2to3
                                                by contradiction /* impossible chain */
                                              next
                                                case tag_38
                                                solve( (#vl.2, 0) ~~> (#vk.3, 0) )
                                                  case d_0_fst
                                                  solve( !Tag_20( ~k_36.1, ~id_37 ) ▶₂ #vr.11 )
                                                    case Setup_23
                                                    solve( splitEqs(18) )
                                                      case split
                                                      solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                                                        case d_xor_case_1
                                                        by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                                      next
                                                        case d_xor_case_2
                                                        solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                                          case Xor
                                                          by contradiction /* cyclic */
                                                        qed
                                                      next
                                                        case d_xor_case_3
                                                        by contradiction /* impossible chain */
                                                      next
                                                        case d_xor_case_4
                                                        by contradiction /* impossible chain */
                                                      qed
                                                    qed
                                                  qed
                                                next
                                                  case d_0_snd
                                                  solve( (#vr.12, 0) ~~> (#vk.3, 0) )
                                                    case d_xor_case_1
                                                    solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                                      case Xor
                                                      by contradiction /* cyclic */
                                                    qed
                                                  next
                                                    case d_xor_case_2
                                                    solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                                      case Xor
                                                      solve( !Tag_20( ~k_36, ~id_37 ) ▶₂ #vr.11 )
                                                        case Setup_23
                                                        solve( !KU( ~r1_27 ) @ #vk.5 )
                                                          case TgRulereader_32_2to3
                                                          by contradiction /* cyclic */
                                                        qed
                                                      qed
                                                    qed
                                                  next
                                                    case d_xor_case_3
                                                    by contradiction /* impossible chain */
                                                  next
                                                    case d_xor_case_4
                                                    by solve( (#vr.13, 0) ~~> (#vk.3, 0) )
                                                  qed
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      next
                                        case Xor_case_2
                                        solve( !Tag_20( ~k_36, ~id_37 ) ▶₂ #vr.8 )
                                          case Setup_23
                                          solve( !KU( ~r1_27 ) @ #vk.4 )
                                            case TgRulereader_32_2to3
                                            by contradiction /* cyclic */
                                          qed
                                        qed
                                      qed
                                    next
                                      case d_xor_case_3
                                      by contradiction /* impossible chain */
                                    next
                                      case d_xor_case_4
                                      by solve( (#vr.10, 0) ~~> (#vk.2, 0) )
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_2
                            solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                              case Xor
                              solve( !Tag_20( ~k_29, ~id_37 ) ▶₂ #vr.6 )
                                case Setup_23
                                solve( !KU( ~r1_27 ) @ #vk.3 )
                                  case TgRulereader_32_2to3
                                  by contradiction /* cyclic */
                                qed
                              qed
                            qed
                          next
                            case d_xor_case_3
                            by contradiction /* impossible chain */
                          next
                            case d_xor_case_4
                            by solve( (#vr.8, 0) ~~> (#vk.1, 0) )
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case d_xor_case_2
                  by solve( (#vr.5, 0) ~~> (#vk, 0) )
                next
                  case d_xor_case_3
                  by contradiction /* impossible chain */
                next
                  case d_xor_case_4
                  by contradiction /* impossible chain */
                qed
              qed
            qed
          next
            case d_0_snd
            solve( (#vr.4, 0) ~~> (#vk, 0) )
              case d_xor_case_1
              by solve( (#vr.5, 0) ~~> (#vk, 0) )
            next
              case d_xor_case_2
              solve( (#vr.5, 0) ~~> (#vk, 0) )
                case Xor
                solve( !Tag_20( ~k_29, ~id_37 ) ▶₂ #vr.3 )
                  case Setup_23
                  solve( !KU( ~r1_27 ) @ #vk.1 )
                    case TgRulereader_32_2to3
                    by contradiction /* cyclic */
                  qed
                qed
              qed
            next
              case d_xor_case_3
              by contradiction /* impossible chain */
            next
              case d_xor_case_4
              by solve( (#vr.5, 0) ~~> (#vk, 0) )
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma executable:
  exists-trace
  "∃ x_52 #i_53 #j_54.
    ((Alive_25( x_52, 'Tag' ) @ #i_53) ∧
     (Response_33( x_52, 'Tag' ) @ #j_54)) ∧
    (¬(∃ #k_55. (Response_33( x_52, 'Tag' ) @ #k_55) ∧ (¬(#j_54 = #k_55))))"
/*
guarded formula characterizing all satisfying traces:
"∃ x_52 #i_53 #j_54.
  (Alive_25( x_52, 'Tag' ) @ #i_53) ∧ (Response_33( x_52, 'Tag' ) @ #j_54)
 ∧
  ∀ #k_55. (Response_33( x_52, 'Tag' ) @ #k_55) ⇒ #j_54 = #k_55"
*/
by sorry

/* All well-formedness checks were successful. */

end