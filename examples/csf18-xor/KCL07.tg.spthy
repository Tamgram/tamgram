theory KCL07
begin

builtins: xor, hashing

rule Setup_25:
    [ Fr(~k_23)
    , Fr(~id_24)
    ]
  --[ OnlyOnce_20()
    ]->
    [ !Reader_21(~k_23, ~id_24)
    , !Tag_22(~k_23, ~id_24)
    ]

rule reader_34_NoneTo1To2:
  [Fr(~pid)]--[]->[StF(~pid, 'tgk2', 'empty_tuple')]

rule reader_34_ManyTo2To3_reader1:
    [ StF(~pid, 'tgk2', 'empty_tuple')
    , Fr(~r1_29)
    ]
  --[ Challenge_26(~r1_29, 'Reader')
    ]->
    [ StF(~pid, 'tgk3', <~r1_29>)
    , Out(~r1_29)
    ]

rule reader_34_ManyTo3ToNone_reader2:
    [ StF(~pid, 'tgk3', <~u_tgany0_33>)
    , !Reader_21(~k_31, ~id_32)
    , In(xoredhash_30)
    ]
  --[ Alive_27(~k_31, 'Tag')
    , Eq_28(xoredhash_30, ((~id_32) XOR (h(<~u_tgany0_33, ~k_31>))))
    ]->
    [ 
    ]

rule tag_40:
    [ In(r1_37)
    , Fr(~r2_36)
    , !Tag_22(~k_38, ~id_39)
    ]
  --[ Response_35(~k_38, 'Tag')
    ]->
    [ Out(<((~id_39) XOR (~r2_36)), ((h(<r1_37, ~k_38>)) XOR (~r2_36))>)
    ]

restriction equality:
  "All x_41 y_42 #i_43 .
     ((Eq_28(x_41, y_42) @ #i_43) ==> (((x_41) = (y_42))))"

restriction unique:
  "All #i_45 #j_46 .
     ((((OnlyOnce_20() @ #i_45) & (OnlyOnce_20() @ #j_46))) ==> (#i_45 = #j_46))"

lemma recentalive_tag []:
  all-traces
  "All x_48 #i_49 .
     ((Alive_27(x_48, 'Tag') @ #i_49) ==> (Ex y_50 #j_51 #k_52 .
                                             ((((((Challenge_26(y_50, 'Reader') @ #k_52) & (Response_35(
                                             x_48, 'Tag') @ #j_51))) & (#k_52 < #j_51))) & (#j_51 < #i_49))))"

lemma executable []:
  exists-trace
  "Ex x_54 #i_55 #j_56 .
     ((((Alive_27(x_54, 'Tag') @ #i_55) & (Response_35(x_54, 'Tag') @ #j_56))) & (not 
     Ex #k_57 .
       ((Response_35(x_54, 'Tag') @ #k_57) & (not #j_56 = #k_57))))"

end

