theory CRxor
begin

builtins: xor, hashing

rule Setup_30:
    [ Fr(~k_29)
    ]
  --[ OnlyOnce_20()
    ]->
    [ !InitLTK_21(~k_29)
    , !RespLTK_22(~k_29)
    ]

rule TgStartinitiator_36_1:
  [Fr(~pid)]--[]->[St(~pid, 'tgk1', 'empty_tuple')]

rule TgRuleinitiator_36_1to2:
    [ St(~pid, 'tgk1', 'empty_tuple')
    , Fr(~na_31)
    ]
  --[ Challenge_27(~na_31)
    ]->
    [ St(~pid, 'tgk2', <~na_31>)
    , Out(~na_31)
    ]

rule TgRuleinitiator_36_2to3:
    [ St(~pid, 'tgk2', <~u_tgany0_35>)
    , !InitLTK_21(~k_34)
    , In(<m_33, nb_32>)
    ]
  --[ Alive_25(~u_tgany0_35, ~k_34)
    , Eq_23(h(((((~u_tgany0_35) XOR (~k_34))) XOR (nb_32))), m_33)
    ]->
    [ 
    ]

rule responder_40:
    [ In(na_38)
    , Fr(~nb_37)
    , !RespLTK_22(~k_39)
    ]
  --[ Response_28(~k_39)
    , Neq_24(na_38, zero)
    , NeqForExec_26(na_38, zero)
    ]->
    [ Out(<h(((((na_38) XOR (~k_39))) XOR (~nb_37))), ~nb_37>)
    ]

restriction equality:
  "All x_41 y_42 #i_43 .
     ((Eq_23(x_41, y_42) @ #i_43) ==> (((x_41) = (y_42))))"

restriction unique:
  "All #i_45 #j_46 .
     ((((OnlyOnce_20() @ #i_45) & (OnlyOnce_20() @ #j_46))) ==> (#i_45 = #j_46))"

restriction inequality:
  "not Ex x_48 #i_49 .
         Neq_24(x_48, x_48) @ #i_49"

lemma alive []:
  all-traces
  "All x_51 y_52 #i_53 .
     ((Alive_25(x_51, y_52) @ #i_53) ==> (Ex #j_54 .
                                            Response_28(y_52) @ #j_54))"

lemma recentalive_tag []:
  all-traces
  "All x_56 y_57 #i_58 .
     ((Alive_25(x_56, y_57) @ #i_58) ==> (Ex #j_59 #k_60 .
                                            ((((((Challenge_27(x_56) @ #k_60) & (Response_28(
                                            y_57) @ #j_59))) & (#k_60 < #j_59))) & (#j_59 < #i_58))))"

lemma executable []:
  exists-trace
  "Ex x_62 y_63 #i_64 #j_65 .
     ((((((Alive_25(x_62, y_63) @ #i_64) & (Response_28(y_63) @ #j_65))) & (not 
     Ex #k_66 .
       ((Response_28(y_63) @ #k_66) & (not #j_65 = #k_66))))) & (not 
     Ex #l_67 .
       NeqForExec_26(x_62, x_62) @ #l_67))"

end

